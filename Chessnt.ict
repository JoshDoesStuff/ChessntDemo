ctjsVersion: 4.0.2
backups: 3
language: typescript
notes: ''
libs:
  place:
    gridX: 1024
    gridY: 1024
  pointer:
    startlocked: false
  keyboard: {}
  keyboard.polyfill: {}
  pointer.polyfill: {}
  gamepad: {}
  random: {}
  flow: {}
  tween: {}
  transition: {}
  storage: {}
  vkeys: {}
  desktop: {}
  cutscene: {}
startroom: pM5mTt3wDQNBNG
contentTypes: []
actions:
  - name: Press
    methods:
      - code: pointer.Primary
  - name: AltPress
    methods:
      - code: pointer.Secondary
      - code: pointer.Double
  - name: Scale
    methods:
      - code: pointer.DeltaPinch
      - code: pointer.Wheel
  - name: Up
    methods:
      - code: keyboard.ArrowUp
      - code: keyboard.KeyW
      - code: gamepad.Up
  - name: Down
    methods:
      - code: keyboard.KeyS
      - code: keyboard.ArrowDown
      - code: gamepad.Down
  - name: Left
    methods:
      - code: keyboard.KeyA
      - code: keyboard.ArrowLeft
      - code: gamepad.Left
  - name: Right
    methods:
      - code: keyboard.ArrowRight
      - code: keyboard.KeyD
      - code: gamepad.Right
  - name: Enter/Select
    methods:
      - code: keyboard.Enter
      - code: gamepad.Button1
  - name: Back/Cancel
    methods:
      - code: keyboard.Escape
      - code: gamepad.Button2
  - name: Pause
    methods:
      - code: gamepad.Select
  - name: XJoystick
    methods:
      - code: gamepad.LStickX
  - name: YJoystick
    methods:
      - code: gamepad.LStickY
scripts: []
assets:
  - type: folder
    uid: GDRFKMT4pct1P2
    colorClass: act
    icon: help-circle
    name: Textures
    lastmod: 1712356303007
    entries:
      - type: folder
        uid: 4FKbgwcj5L8m1g
        colorClass: act
        icon: help-circle
        name: UI
        lastmod: 1713301766809
        entries:
          - type: folder
            uid: Jd7pfcR5dLcQDj
            colorClass: act
            icon: help-circle
            name: Pause Menu
            lastmod: 1713301781728
            entries:
              - lastmod: 1712960317216
                type: texture
                name: buttoniconpause
                untill: 0
                grid:
                  - 1
                  - 1
                axis:
                  - 32
                  - 32
                marginx: 0
                marginy: 0
                imgWidth: 64
                imgHeight: 64
                width: 64
                height: 64
                offx: 0
                offy: 0
                origname: ibDM5gQMphr4mTh.png
                shape: rect
                left: 32
                right: 32
                top: 32
                bottom: 32
                uid: bDM5gQMphr4mTh
                padding: 1
                isBlank: false
                source: >-
                  C:\Users\702029128\Documents\GitHub\Chessnt\Assets\buttoniconpause.png
              - lastmod: 1712960317228
                type: texture
                name: buttoniconplay
                untill: 0
                grid:
                  - 1
                  - 1
                axis:
                  - 32
                  - 32
                marginx: 0
                marginy: 0
                imgWidth: 64
                imgHeight: 64
                width: 64
                height: 64
                offx: 0
                offy: 0
                origname: icbDptw2MwQqbKf.png
                shape: rect
                left: 32
                right: 32
                top: 32
                bottom: 32
                uid: cbDptw2MwQqbKf
                padding: 1
                isBlank: false
                source: >-
                  C:\Users\702029128\Documents\GitHub\Chessnt\Assets\buttoniconplay.png
              - lastmod: 1713299717516
                type: texture
                name: Buttonresume
                untill: 0
                grid:
                  - 1
                  - 1
                axis:
                  - 128
                  - 32
                marginx: 0
                marginy: 0
                imgWidth: 256
                imgHeight: 64
                width: 256
                height: 64
                offx: 0
                offy: 0
                origname: iPBnP1zjQ1NJG97.png
                shape: rect
                left: 128
                right: 128
                top: 32
                bottom: 32
                uid: PBnP1zjQ1NJG97
                padding: 1
                isBlank: false
                source: >-
                  C:\Users\702029128\Documents\GitHub\ChessntDemo\Assets\Buttonresume.png
              - lastmod: 1712960317237
                type: texture
                name: buttonquit
                untill: 0
                grid:
                  - 1
                  - 1
                axis:
                  - 128
                  - 32
                marginx: 0
                marginy: 0
                imgWidth: 256
                imgHeight: 64
                width: 256
                height: 64
                offx: 0
                offy: 0
                origname: iNCc8PK3w6PmPdr.png
                shape: rect
                left: 128
                right: 128
                top: 32
                bottom: 32
                uid: NCc8PK3w6PmPdr
                padding: 1
                isBlank: false
                source: >-
                  C:\Users\702029128\Documents\GitHub\Chessnt\Assets\buttonquit.png
              - lastmod: 1713299738683
                type: texture
                name: Buttonoptions
                untill: 0
                grid:
                  - 1
                  - 1
                axis:
                  - 128
                  - 32
                marginx: 0
                marginy: 0
                imgWidth: 256
                imgHeight: 64
                width: 256
                height: 64
                offx: 0
                offy: 0
                origname: iNCgKdKH9rkhm4k.png
                shape: rect
                left: 128
                right: 128
                top: 32
                bottom: 32
                uid: NCgKdKH9rkhm4k
                padding: 1
                isBlank: false
                source: >-
                  C:\Users\702029128\Documents\GitHub\ChessntDemo\Assets\Buttonoptions.png
              - lastmod: 1712960317203
                type: texture
                name: buttoniconlock
                untill: 0
                grid:
                  - 1
                  - 1
                axis:
                  - 32
                  - 32
                marginx: 0
                marginy: 0
                imgWidth: 64
                imgHeight: 64
                width: 64
                height: 64
                offx: 0
                offy: 0
                origname: it63BjJFjHnNtmB.png
                shape: rect
                left: 32
                right: 32
                top: 32
                bottom: 32
                uid: t63BjJFjHnNtmB
                padding: 1
                isBlank: false
                source: >-
                  C:\Users\702029128\Documents\GitHub\Chessnt\Assets\buttoniconlock.png
              - lastmod: 1712870999745
                type: texture
                name: buttonRandomDifficulty
                untill: 0
                grid:
                  - 1
                  - 1
                axis:
                  - 128
                  - 32
                marginx: 0
                marginy: 0
                imgWidth: 256
                imgHeight: 64
                width: 256
                height: 64
                offx: 0
                offy: 0
                origname: iJQhj9rwjqMKftf.png
                shape: rect
                left: 128
                right: 128
                top: 32
                bottom: 32
                uid: JQhj9rwjqMKftf
                padding: 1
                isBlank: false
                source: >-
                  C:\Users\702029128\Documents\GitHub\Chessnt\Assets\buttonRandomDifficulty.png
              - lastmod: 1713299727276
                type: texture
                name: Buttonstart
                untill: 0
                grid:
                  - 1
                  - 1
                axis:
                  - 128
                  - 32
                marginx: 0
                marginy: 0
                imgWidth: 256
                imgHeight: 64
                width: 256
                height: 64
                offx: 0
                offy: 0
                origname: iCtj1NqgzKRJMbr.png
                shape: rect
                left: 128
                right: 128
                top: 32
                bottom: 32
                uid: Ctj1NqgzKRJMbr
                padding: 1
                isBlank: false
                source: >-
                  C:\Users\702029128\Documents\GitHub\ChessntDemo\Assets\Buttonstart.png
              - lastmod: 1713299803890
                type: texture
                name: Difficulty
                untill: 0
                grid:
                  - 1
                  - 1
                axis:
                  - 260
                  - 50
                marginx: 0
                marginy: 0
                imgWidth: 520
                imgHeight: 100
                width: 520
                height: 100
                offx: 0
                offy: 0
                origname: i663dbcMqt1LQGM.png
                shape: rect
                left: 260
                right: 260
                top: 50
                bottom: 50
                uid: 663dbcMqt1LQGM
                padding: 1
                isBlank: false
                source: >-
                  C:\Users\702029128\Documents\GitHub\ChessntDemo\Assets\Difficulty.png
              - lastmod: 1712872158534
                type: texture
                name: buttondiffcultlylock
                untill: 0
                grid:
                  - 1
                  - 1
                axis:
                  - 128
                  - 32
                marginx: 0
                marginy: 0
                imgWidth: 256
                imgHeight: 80
                width: 256
                height: 80
                offx: 0
                offy: 0
                origname: iWMngdbmMCkrKrL.png
                shape: rect
                left: 128
                right: 128
                top: 32
                bottom: 32
                uid: WMngdbmMCkrKrL
                padding: 1
                isBlank: false
                source: >-
                  C:\Users\702029128\Documents\GitHub\Chessnt\Assets\buttondiffcultlylock.png
                stripPoints:
                  - x: 0
                    'y': -40
                  - x: 122
                    'y': -12
                  - x: 75
                    'y': 32
                  - x: -75
                    'y': 32
                  - x: -122
                    'y': -12
                closedStrip: true
                r: 40
          - type: folder
            uid: dmfh537tz5Bw6t
            colorClass: act
            icon: help-circle
            name: Main Menu
            lastmod: 1713301797392
            entries:
              - lastmod: 1713653876670
                type: texture
                name: startButton
                untill: 0
                grid:
                  - 1
                  - 1
                axis:
                  - 180
                  - 90
                marginx: 0
                marginy: 0
                imgWidth: 360
                imgHeight: 180
                width: 360
                height: 180
                offx: 0
                offy: 0
                origname: i1ttRptHrF3RPcD.png
                shape: rect
                left: 180
                right: 180
                top: 90
                bottom: 90
                uid: 1ttRptHrF3RPcD
                padding: 1
                isBlank: false
                source: >-
                  C:\Users\702029128\Documents\GitHub\Chessnt\Assets\buttonmainplay.png
              - lastmod: 1712959747147
                type: texture
                name: buttonsexit
                untill: 0
                grid:
                  - 1
                  - 1
                axis:
                  - 180
                  - 90
                marginx: 0
                marginy: 0
                imgWidth: 360
                imgHeight: 180
                width: 360
                height: 180
                offx: 0
                offy: 0
                origname: inKKJG5TWpzMNK1.png
                shape: rect
                left: 180
                right: 180
                top: 90
                bottom: 90
                uid: nKKJG5TWpzMNK1
                padding: 1
                isBlank: false
                source: >-
                  C:\Users\702029128\Documents\GitHub\Chessnt\Assets\buttonsexit.png
                ignoreTiledUse: true
              - lastmod: 1712871934448
                type: texture
                name: buttonsoptions
                untill: 0
                grid:
                  - 1
                  - 1
                axis:
                  - 180
                  - 90
                marginx: 0
                marginy: 0
                imgWidth: 360
                imgHeight: 180
                width: 360
                height: 180
                offx: 0
                offy: 0
                origname: iwQhQ1TrMR72F85.png
                shape: rect
                left: 180
                right: 180
                top: 90
                bottom: 90
                uid: wQhQ1TrMR72F85
                padding: 1
                isBlank: false
                source: >-
                  C:\Users\702029128\Documents\GitHub\Chessnt\Assets\buttonsoptions.png
              - lastmod: 1712960147791
                type: texture
                name: buttonmaincredits
                untill: 0
                grid:
                  - 1
                  - 1
                axis:
                  - 180
                  - 90
                marginx: 0
                marginy: 0
                imgWidth: 360
                imgHeight: 180
                width: 360
                height: 180
                offx: 0
                offy: 0
                origname: i6Ptcd4fMjL8K5Q.png
                shape: rect
                left: 180
                right: 180
                top: 90
                bottom: 90
                uid: 6Ptcd4fMjL8K5Q
                padding: 1
                isBlank: false
                source: >-
                  C:\Users\702029128\Documents\GitHub\Chessnt\Assets\buttonmaincredits.png
              - lastmod: 1712356463812
                type: texture
                name: logo
                untill: 0
                grid:
                  - 1
                  - 1
                axis:
                  - 558
                  - 98
                marginx: 0
                marginy: 0
                imgWidth: 1116
                imgHeight: 196
                width: 1116
                height: 196
                offx: 0
                offy: 0
                origname: iK3jhgP7tWb3WtQ.png
                shape: rect
                left: 558
                right: 558
                top: 98
                bottom: 98
                uid: K3jhgP7tWb3WtQ
                padding: 1
                isBlank: false
                source: 'C:\Users\702029128\Documents\GitHub\Chessnt\Assets\logo.png'
              - lastmod: 1713386400354
                type: texture
                name: optionsNotFound
                untill: 0
                grid:
                  - 1
                  - 1
                axis:
                  - 244
                  - 239
                marginx: 0
                marginy: 0
                imgWidth: 512
                imgHeight: 512
                width: 512
                height: 512
                offx: 0
                offy: 0
                origname: ihnkktb5LKDKn48.png
                shape: rect
                left: 256
                right: 256
                top: 182
                bottom: 141
                uid: hnkktb5LKDKn48
                padding: 1
                isBlank: false
                source: >-
                  C:\Users\702029128\Documents\GitHub\ChessntDemo\Assets\optionsNotFound.png
                stripPoints:
                  - x: 0
                    'y': -256
                  - x: 243
                    'y': -79
                  - x: 150
                    'y': 207
                  - x: -150
                    'y': 207
                  - x: -243
                    'y': -79
                closedStrip: true
              - lastmod: 1713299696372
                type: texture
                name: Creators
                untill: 0
                grid:
                  - 1
                  - 1
                axis:
                  - 162
                  - 200
                marginx: 0
                marginy: 0
                imgWidth: 325
                imgHeight: 400
                width: 325
                height: 400
                offx: 0
                offy: 0
                origname: iJh5bHCRC2LGqHR.png
                shape: rect
                left: 162
                right: 163
                top: 200
                bottom: 200
                uid: Jh5bHCRC2LGqHR
                padding: 1
                isBlank: false
                source: >-
                  C:\Users\702029128\Documents\GitHub\ChessntDemo\Assets\Creators.png
          - type: folder
            uid: kbP5hb5H6wKKg7
            colorClass: act
            icon: help-circle
            name: Difficulty Select
            lastmod: 1713301802584
            entries: []
          - lastmod: 1712699554515
            type: texture
            name: background
            untill: 0
            grid:
              - 1
              - 1
            axis:
              - 640
              - 360
            marginx: 0
            marginy: 0
            imgWidth: 1280
            imgHeight: 720
            width: 1280
            height: 720
            offx: 0
            offy: 0
            origname: iTqn3Ng77WK9tzM.png
            shape: rect
            left: 640
            right: 640
            top: 360
            bottom: 360
            uid: Tqn3Ng77WK9tzM
            padding: 128
            isBlank: false
            source: 'C:\Users\702029128\Documents\GitHub\Chessnt\Assets\background.gif'
            tiled: true
          - lastmod: 1712787035413
            type: texture
            name: blackScreen
            untill: 0
            grid:
              - 1
              - 1
            axis:
              - 0
              - 0
            marginx: 0
            marginy: 0
            imgWidth: 1280
            imgHeight: 720
            width: 1280
            height: 720
            offx: 0
            offy: 0
            origname: iP6gcthTW1KPpb8.png
            shape: rect
            left: 0
            right: 1280
            top: 0
            bottom: 720
            uid: P6gcthTW1KPpb8
            padding: 1
            isBlank: false
          - lastmod: 1713646445922
            type: texture
            name: buttonIconBack
            untill: 0
            grid:
              - 1
              - 1
            axis:
              - 32
              - 32
            marginx: 0
            marginy: 0
            imgWidth: 64
            imgHeight: 64
            width: 64
            height: 64
            offx: 0
            offy: 0
            origname: ijkL3k74KfwqzRm.png
            shape: rect
            left: 32
            right: 32
            top: 32
            bottom: 32
            uid: jkL3k74KfwqzRm
            padding: 1
            isBlank: false
            source: >-
              C:\Users\Josh\Documents\GitHub\ChessntDemo\Assets\UI\buttonIconBack.png
          - type: folder
            uid: ddnm2nbThd1Gm6
            colorClass: act
            icon: help-circle
            name: Win Screen
            lastmod: 1713902766168
            entries:
              - lastmod: 1713902762077
                type: texture
                name: WhiteWins
                untill: 0
                grid:
                  - 1
                  - 1
                axis:
                  - 128
                  - 64
                marginx: 0
                marginy: 0
                imgWidth: 256
                imgHeight: 128
                width: 256
                height: 128
                offx: 0
                offy: 0
                origname: inNtQLbDBfQCKdp.png
                shape: rect
                left: 128
                right: 128
                top: 64
                bottom: 64
                uid: nNtQLbDBfQCKdp
                padding: 1
                isBlank: false
                source: >-
                  C:\Users\Josh\Documents\GitHub\ChessntOrigins\Assets\src\UI\Base\WhiteWins.png
              - lastmod: 1713902727960
                type: texture
                name: BlackWins
                untill: 0
                grid:
                  - 1
                  - 1
                axis:
                  - 128
                  - 64
                marginx: 0
                marginy: 0
                imgWidth: 256
                imgHeight: 128
                width: 256
                height: 128
                offx: 0
                offy: 0
                origname: i8mrDbH4PfR7cnB.png
                shape: rect
                left: 128
                right: 128
                top: 64
                bottom: 64
                uid: 8mrDbH4PfR7cnB
                padding: 1
                isBlank: false
                source: >-
                  C:\Users\Josh\Documents\GitHub\ChessntOrigins\Assets\src\UI\Base\BlackWins.png
          - type: folder
            uid: j49f49fhJNPJ5w
            colorClass: act
            icon: help-circle
            name: Turn Indicator
            lastmod: 1713902915865
            entries:
              - lastmod: 1713902746028
                type: texture
                name: Player2Turn
                untill: 0
                grid:
                  - 1
                  - 1
                axis:
                  - 128
                  - 64
                marginx: 0
                marginy: 0
                imgWidth: 256
                imgHeight: 128
                width: 256
                height: 128
                offx: 0
                offy: 0
                origname: ipJpJCFkDfQhf9w.png
                shape: rect
                left: 128
                right: 128
                top: 64
                bottom: 64
                uid: pJpJCFkDfQhf9w
                padding: 1
                isBlank: false
                source: >-
                  C:\Users\Josh\Documents\GitHub\ChessntOrigins\Assets\src\UI\Base\Player2Turn.png
              - lastmod: 1713902755051
                type: texture
                name: Player1Turn
                untill: 0
                grid:
                  - 1
                  - 1
                axis:
                  - 128
                  - 64
                marginx: 0
                marginy: 0
                imgWidth: 256
                imgHeight: 128
                width: 256
                height: 128
                offx: 0
                offy: 0
                origname: i5fnhPWrdTC7GD5.png
                shape: rect
                left: 128
                right: 128
                top: 64
                bottom: 64
                uid: 5fnhPWrdTC7GD5
                padding: 1
                isBlank: false
                source: >-
                  C:\Users\Josh\Documents\GitHub\ChessntOrigins\Assets\src\UI\Base\Player1Turn.png
      - type: folder
        uid: NwKJ346McgqMH6
        colorClass: act
        icon: help-circle
        name: Gameplay
        lastmod: 1713301772096
        entries:
          - lastmod: 1713302586668
            type: texture
            name: chessboard
            untill: 0
            grid:
              - 1
              - 1
            axis:
              - 280
              - 280
            marginx: 0
            marginy: 0
            imgWidth: 560
            imgHeight: 560
            width: 560
            height: 560
            offx: 0
            offy: 0
            origname: iTg8GhRzKzGg2c9.png
            shape: rect
            left: 280
            right: 280
            top: 280
            bottom: 280
            uid: Tg8GhRzKzGg2c9
            padding: 1
            isBlank: false
            source: >-
              C:\Users\702029128\Documents\GitHub\ChessntDemo\Assets\chessboard.png
          - type: folder
            uid: GFNMwLKJGTnJ7L
            colorClass: act
            icon: help-circle
            name: piecesWhite
            lastmod: 1713647327462
            entries:
              - lastmod: 1713648432992
                type: texture
                name: whitepiecebishop
                untill: 0
                grid:
                  - 1
                  - 1
                axis:
                  - 64
                  - 64
                marginx: 0
                marginy: 0
                imgWidth: 128
                imgHeight: 128
                width: 128
                height: 128
                offx: 0
                offy: 0
                origname: iJdtDG47H399NNk.png
                shape: rect
                left: 39
                right: 39
                top: 64
                bottom: 64
                uid: JdtDG47H399NNk
                padding: 1
                isBlank: false
                source: >-
                  C:\Users\Josh\Documents\GitHub\ChessntDemo\Assets\Pieces\whitepiecebishop.png
              - lastmod: 1713648544882
                type: texture
                name: whitepiecequeen
                untill: 0
                grid:
                  - 1
                  - 1
                axis:
                  - 64
                  - 64
                marginx: 0
                marginy: 0
                imgWidth: 128
                imgHeight: 128
                width: 128
                height: 128
                offx: 0
                offy: 0
                origname: iLpq9qncWgbPFqM.png
                shape: rect
                left: 39
                right: 39
                top: 64
                bottom: 64
                uid: Lpq9qncWgbPFqM
                padding: 1
                isBlank: false
                source: >-
                  C:\Users\Josh\Documents\GitHub\ChessntDemo\Assets\Pieces\whitepiecequeen.png
              - lastmod: 1713655797478
                type: texture
                name: whitepiecepawn
                untill: 0
                grid:
                  - 1
                  - 1
                axis:
                  - 64
                  - 64
                marginx: 0
                marginy: 0
                imgWidth: 128
                imgHeight: 128
                width: 128
                height: 128
                offx: 0
                offy: 0
                origname: i5h2r6pwpc5FtcM.png
                shape: rect
                left: 64
                right: 64
                top: 64
                bottom: 64
                uid: 5h2r6pwpc5FtcM
                padding: 1
                isBlank: false
                source: >-
                  C:\Users\Josh\Documents\GitHub\ChessntDemo\Assets\Pieces\whitepiecepawn.png
              - lastmod: 1713648454478
                type: texture
                name: whitepieceknight
                untill: 0
                grid:
                  - 1
                  - 1
                axis:
                  - 64
                  - 64
                marginx: 0
                marginy: 0
                imgWidth: 128
                imgHeight: 128
                width: 128
                height: 128
                offx: 0
                offy: 0
                origname: iMPBDTRRG5T5RhB.png
                shape: rect
                left: 44
                right: 43
                top: 64
                bottom: 64
                uid: MPBDTRRG5T5RhB
                padding: 1
                isBlank: false
                source: >-
                  C:\Users\Josh\Documents\GitHub\ChessntDemo\Assets\Pieces\whitepieceknight.png
              - lastmod: 1713648417026
                type: texture
                name: whitepieceking
                untill: 0
                grid:
                  - 1
                  - 1
                axis:
                  - 64
                  - 64
                marginx: 0
                marginy: 0
                imgWidth: 128
                imgHeight: 128
                width: 128
                height: 128
                offx: 0
                offy: 0
                origname: ij6h82JcCcWmMjb.png
                shape: rect
                left: 39
                right: 39
                top: 64
                bottom: 63
                uid: j6h82JcCcWmMjb
                padding: 1
                isBlank: false
                source: >-
                  C:\Users\Josh\Documents\GitHub\ChessntDemo\Assets\Pieces\whitepieceking.png
                stripPoints:
                  - x: -12.5
                    'y': -40.75
                  - x: -1
                    'y': -61.25
                  - x: 22.5
                    'y': -35.60000038146973
                  - x: 38
                    'y': 52
                  - x: -38
                    'y': 52
                  - x: -61
                    'y': -20
                  - x: -28
                    'y': 24.149999618530273
                  - x: -25.75
                    'y': 17.5
                  - x: -20.25
                    'y': 9.649999618530273
                  - x: -20
                    'y': -1
                  - x: -19.25
                    'y': -22
                  - x: -22.75
                    'y': -35.60000038146973
                closedStrip: true
                r: 64
              - lastmod: 1713648626502
                type: texture
                name: whitepiecerook
                untill: 0
                grid:
                  - 1
                  - 1
                axis:
                  - 64
                  - 64
                marginx: 0
                marginy: 0
                imgWidth: 128
                imgHeight: 128
                width: 128
                height: 128
                offx: 0
                offy: 0
                origname: iDH5B8Fwmg7c3Kk.png
                shape: rect
                left: 39
                right: 39
                top: 64
                bottom: 64
                uid: DH5B8Fwmg7c3Kk
                padding: 1
                isBlank: false
                source: >-
                  C:\Users\Josh\Documents\GitHub\ChessntDemo\Assets\Pieces\whitepiecerook.png
          - type: folder
            uid: qqjKD6brMFdBgq
            colorClass: act
            icon: help-circle
            name: piecesBlack
            lastmod: 1713647335165
            entries:
              - lastmod: 1713653958520
                type: texture
                name: blackpiecequeen
                untill: 0
                grid:
                  - 1
                  - 1
                axis:
                  - 64
                  - 64
                marginx: 0
                marginy: 0
                imgWidth: 128
                imgHeight: 128
                width: 128
                height: 128
                offx: 0
                offy: 0
                origname: idzzp47n9q1K8Tj.png
                shape: rect
                left: 39
                right: 39
                top: 64
                bottom: 64
                uid: dzzp47n9q1K8Tj
                padding: 1
                isBlank: false
                source: >-
                  C:\Users\Josh\Documents\GitHub\ChessntDemo\Assets\Pieces\blackpiecequeen.png
              - lastmod: 1713655807348
                type: texture
                name: blackpiecepawn
                untill: 0
                grid:
                  - 1
                  - 1
                axis:
                  - 64
                  - 64
                marginx: 0
                marginy: 0
                imgWidth: 128
                imgHeight: 128
                width: 128
                height: 128
                offx: 0
                offy: 0
                origname: iqFqjpg1Rz5wzG1.png
                shape: rect
                left: 64
                right: 64
                top: 64
                bottom: 64
                uid: qFqjpg1Rz5wzG1
                padding: 1
                isBlank: false
                source: >-
                  C:\Users\Josh\Documents\GitHub\ChessntDemo\Assets\Pieces\blackpiecepawn.png
              - lastmod: 1713649085421
                type: texture
                name: blackpieceknight
                untill: 0
                grid:
                  - 1
                  - 1
                axis:
                  - 64
                  - 64
                marginx: 0
                marginy: 0
                imgWidth: 128
                imgHeight: 128
                width: 128
                height: 128
                offx: 0
                offy: 0
                origname: iNJnBR7dp7CL1dd.png
                shape: rect
                left: 44
                right: 43
                top: 64
                bottom: 64
                uid: NJnBR7dp7CL1dd
                padding: 1
                isBlank: false
                source: >-
                  C:\Users\Josh\Documents\GitHub\ChessntDemo\Assets\Pieces\blackpieceknight.png
              - lastmod: 1713649054765
                type: texture
                name: blackpiecebishop
                untill: 0
                grid:
                  - 1
                  - 1
                axis:
                  - 64
                  - 64
                marginx: 0
                marginy: 0
                imgWidth: 128
                imgHeight: 128
                width: 128
                height: 128
                offx: 0
                offy: 0
                origname: iHfDCmH63QLk6c1.png
                shape: rect
                left: 39
                right: 39
                top: 64
                bottom: 64
                uid: HfDCmH63QLk6c1
                padding: 1
                isBlank: false
                source: >-
                  C:\Users\Josh\Documents\GitHub\ChessntDemo\Assets\Pieces\blackpiecebishop.png
              - lastmod: 1713649072664
                type: texture
                name: blackpieceking
                untill: 0
                grid:
                  - 1
                  - 1
                axis:
                  - 64
                  - 64
                marginx: 0
                marginy: 0
                imgWidth: 128
                imgHeight: 128
                width: 128
                height: 128
                offx: 0
                offy: 0
                origname: iMHRHHJ8jcWbJwG.png
                shape: rect
                left: 39
                right: 39
                top: 64
                bottom: 64
                uid: MHRHHJ8jcWbJwG
                padding: 1
                isBlank: false
                source: >-
                  C:\Users\Josh\Documents\GitHub\ChessntDemo\Assets\Pieces\blackpieceking.png
              - lastmod: 1713649157693
                type: texture
                name: blackpiecerook
                untill: 0
                grid:
                  - 1
                  - 1
                axis:
                  - 64
                  - 64
                marginx: 0
                marginy: 0
                imgWidth: 128
                imgHeight: 128
                width: 128
                height: 128
                offx: 0
                offy: 0
                origname: ihk23tkhRL3dK2f.png
                shape: rect
                left: 39
                right: 39
                top: 64
                bottom: 64
                uid: hk23tkhRL3dK2f
                padding: 1
                isBlank: false
                source: >-
                  C:\Users\Josh\Documents\GitHub\ChessntDemo\Assets\Pieces\blackpiecerook.png
          - lastmod: 1713676724811
            type: texture
            name: tileHighlight
            untill: 0
            grid:
              - 1
              - 1
            axis:
              - 32
              - 32
            marginx: 0
            marginy: 0
            imgWidth: 64
            imgHeight: 64
            width: 64
            height: 64
            offx: 0
            offy: 0
            origname: iW18rKh6wmJzt8B.png
            shape: rect
            left: 31
            right: 31
            top: 31
            bottom: 31
            uid: W18rKh6wmJzt8B
            padding: 1
            isBlank: false
            source: >-
              C:\Users\Josh\Documents\GitHub\ChessntDemo\Assets\tileHighlight.png
  - type: folder
    uid: 29mQ3bfWdbqLRz
    colorClass: act
    icon: help-circle
    name: Rooms
    lastmod: 1712356310814
    entries:
      - type: room
        oncreate: ''
        onstep: ''
        ondraw: ''
        onleave: ''
        gridX: 64
        gridY: 64
        diagonalGrid: false
        disableGrid: false
        simulate: true
        width: 1280
        height: 720
        restrictCamera: false
        restrictMaxX: 1280
        restrictMinX: 1280
        restrictMaxY: 720
        restrictMinY: 720
        isUi: false
        name: gameplay
        backgroundColor: '#000000'
        follow: -1
        backgrounds:
          - depth: 0
            texture: Tqn3Ng77WK9tzM
            shiftX: 0
            shiftY: 0
            parallaxX: 1
            parallaxY: 1
            movementX: 0
            movementY: 0
            scaleX: 1
            scaleY: 1
            repeat: repeat
        copies:
          - x: 64
            'y': 64
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: DKWbh8rzq7dQFP
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 640
            'y': 360
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: 4Gqfg1jrm89kpd
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 415
            'y': 201
            opacity: 1
            tint: 16777215
            scale:
              x: 0.375
              'y': 0.375
            rotation: 0
            uid: h1KgqHTcKTcdCQ
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 415
            'y': 521
            opacity: 1
            tint: 16777215
            scale:
              x: 0.375
              'y': 0.375
            rotation: 0
            uid: L2HfLRgdwCq3h8
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 415
            'y': 585
            opacity: 1
            tint: 16777215
            scale:
              x: 0.375
              'y': 0.375
            rotation: 0
            uid: NfJqh1GcfLqdtB
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 479
            'y': 585
            opacity: 1
            tint: 16777215
            scale:
              x: 0.375
              'y': 0.375
            rotation: 0
            uid: W5NGLtKdr8Tmkr
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 543
            'y': 585
            opacity: 1
            tint: 16777215
            scale:
              x: 0.375
              'y': 0.375
            rotation: 0
            uid: c191gHKgH6NQg8
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 671
            'y': 585
            opacity: 1
            tint: 16777215
            scale:
              x: 0.375
              'y': 0.375
            rotation: 0
            uid: Q1Rn3GzGNTK6Lf
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 607
            'y': 585
            opacity: 1
            tint: 16777215
            scale:
              x: 0.375
              'y': 0.375
            rotation: 0
            uid: Trp2t7jtmF7HW3
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 415
            'y': 137
            opacity: 1
            tint: 16777215
            scale:
              x: 0.375
              'y': 0.375
            rotation: 0
            uid: 34tHBwnK2JD9G3
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 479
            'y': 137
            opacity: 1
            tint: 16777215
            scale:
              x: 0.375
              'y': 0.375
            rotation: 0
            uid: fc9KqcQ9Tpd6CT
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 543
            'y': 137
            opacity: 1
            tint: 16777215
            scale:
              x: 0.375
              'y': 0.375
            rotation: 0
            uid: fQqRH69jNHkNhJ
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 607
            'y': 137
            opacity: 1
            tint: 16777215
            scale:
              x: 0.375
              'y': 0.375
            rotation: 0
            uid: gfwnqcmj7qr3W7
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 735
            'y': 585
            opacity: 1
            tint: 16777215
            scale:
              x: 0.375
              'y': 0.375
            rotation: 0
            uid: tfGwRLPjC5C9Kt
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 799
            'y': 585
            opacity: 1
            tint: 16777215
            scale:
              x: 0.375
              'y': 0.375
            rotation: 0
            uid: cNmzDtw4T87KTR
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 863
            'y': 585
            opacity: 1
            tint: 16777215
            scale:
              x: 0.375
              'y': 0.375
            rotation: 0
            uid: bbnKM9kqzTnQ1k
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 479
            'y': 521
            opacity: 1
            tint: 16777215
            scale:
              x: 0.37
              'y': 0.37
            rotation: 0
            uid: WMMNFgBMhWMghz
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 543
            'y': 521
            opacity: 1
            tint: 16777215
            scale:
              x: 0.375
              'y': 0.375
            rotation: 0
            uid: KKRnqJHBd8zNK6
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 607
            'y': 521
            opacity: 1
            tint: 16777215
            scale:
              x: 0.375
              'y': 0.375
            rotation: 0
            uid: qDKbwHtRPPbrD2
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 671
            'y': 521
            opacity: 1
            tint: 16777215
            scale:
              x: 0.375
              'y': 0.375
            rotation: 0
            uid: P5R5qjCdnqn52N
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 735
            'y': 521
            opacity: 1
            tint: 16777215
            scale:
              x: 0.375
              'y': 0.375
            rotation: 0
            uid: nQwW5mF5TrPDJ9
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 863
            'y': 521
            opacity: 1
            tint: 16777215
            scale:
              x: 0.375
              'y': 0.375
            rotation: 0
            uid: p6QDLHpfhMfG5c
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 799
            'y': 521
            opacity: 1
            tint: 16777215
            scale:
              x: 0.375
              'y': 0.375
            rotation: 0
            uid: HThbL6PrFPFm7J
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 479
            'y': 201
            opacity: 1
            tint: 16777215
            scale:
              x: 0.375
              'y': 0.375
            rotation: 0
            uid: pCCFf6346MQNFK
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 543
            'y': 201
            opacity: 1
            tint: 16777215
            scale:
              x: 0.375
              'y': 0.375
            rotation: 0
            uid: PzJbpppGJhDRDz
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 607
            'y': 201
            opacity: 1
            tint: 16777215
            scale:
              x: 0.375
              'y': 0.375
            rotation: 0
            uid: THfbFcmLGHtQJm
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 671
            'y': 201
            opacity: 1
            tint: 16777215
            scale:
              x: 0.375
              'y': 0.375
            rotation: 0
            uid: RR3wKKhfDFJJ22
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 735
            'y': 201
            opacity: 1
            tint: 16777215
            scale:
              x: 0.375
              'y': 0.375
            rotation: 0
            uid: hg7wzWngKTddf8
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 799
            'y': 201
            opacity: 1
            tint: 16777215
            scale:
              x: 0.375
              'y': 0.375
            rotation: 0
            uid: 8Ht67d31fwdf6B
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 863
            'y': 201
            opacity: 1
            tint: 16777215
            scale:
              x: 0.375
              'y': 0.375
            rotation: 0
            uid: h31fgMcbN5BGrT
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 735
            'y': 137
            opacity: 1
            tint: 16777215
            scale:
              x: 0.375
              'y': 0.375
            rotation: 0
            uid: tb8z2np1JRqQ5R
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 799
            'y': 137
            opacity: 1
            tint: 16777215
            scale:
              x: 0.375
              'y': 0.375
            rotation: 0
            uid: fRPP2qMjHP5G36
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 863
            'y': 137
            opacity: 1
            tint: 16777215
            scale:
              x: 0.375
              'y': 0.375
            rotation: 0
            uid: 6Qj7nM9B5TR8fb
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 671
            'y': 137
            opacity: 1
            tint: 16777215
            scale:
              x: 0.375
              'y': 0.375
            rotation: 0
            uid: Q8rKpCqqHb8bBT
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 192
            'y': 192
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: QcPdRCgwq97KnD
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 192
            'y': 192
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: JtGzFC5tqt2HHF
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 0
            'y': 0
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: kzgrhWD99djDgj
            exts: {}
            customProperties: {}
            bindings: {}
        tiles: []
        extends: {}
        lastmod: 1713912204973
        events:
          - eventKey: OnRoomStart
            code: 'localStorage.setItem(''whichPlayerTurn'',''1'')'
            arguments: {}
            lib: core
        behaviors: []
        uid: rmpQWHHn6F2fCp
      - type: room
        oncreate: ''
        onstep: ''
        ondraw: ''
        onleave: ''
        gridX: 16
        gridY: 16
        diagonalGrid: false
        disableGrid: false
        simulate: true
        width: 1280
        height: 720
        restrictCamera: true
        restrictMaxX: 1280
        restrictMinX: 1280
        restrictMaxY: 720
        restrictMinY: 720
        isUi: false
        name: mainMenu
        backgroundColor: '#000000'
        follow: -1
        backgrounds:
          - depth: 0
            texture: Tqn3Ng77WK9tzM
            shiftX: 0
            shiftY: 0
            parallaxX: 1
            parallaxY: 1
            movementX: 0
            movementY: 0
            scaleX: 1
            scaleY: 1
            repeat: repeat
        copies:
          - x: 640
            'y': 192
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: gKc33BgtFBBqc7
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 159.9999996
            'y': 584.0000001
            opacity: 1
            tint: 16777215
            scale:
              x: 0.62222222
              'y': 0.62222222
            rotation: 0
            uid: 5Ct5mrz791BLcW
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 479.9999996
            'y': 584.0000001
            opacity: 1
            tint: 16777215
            scale:
              x: 0.62222222
              'y': 0.62222222
            rotation: 0
            uid: R6W2BMhH7DtHhP
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 1119.9999998
            'y': 584.0000001
            opacity: 1
            tint: 16777215
            scale:
              x: 0.62222222
              'y': 0.62222222
            rotation: 0
            uid: Dp4jT3JNfNLjmF
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 799.9999997
            'y': 584.0000001
            opacity: 1
            tint: 16777215
            scale:
              x: 0.62222222
              'y': 0.62222222
            rotation: 0
            uid: 7CQzdkkMW5p6jf
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 0
            'y': 0
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: kzgrhWD99djDgj
            exts: {}
            customProperties: {}
            bindings: {}
        tiles: []
        extends: {}
        lastmod: 1713680171267
        events: []
        behaviors: []
        uid: pM5mTt3wDQNBNG
      - type: room
        oncreate: ''
        onstep: ''
        ondraw: ''
        onleave: ''
        gridX: 32
        gridY: 32
        diagonalGrid: false
        disableGrid: false
        simulate: true
        width: 1280
        height: 720
        restrictCamera: false
        restrictMaxX: 1280
        restrictMinX: 1280
        restrictMaxY: 720
        restrictMinY: 720
        isUi: false
        name: difficultySelect
        backgroundColor: '#000000'
        follow: -1
        backgrounds:
          - depth: 0
            texture: Tqn3Ng77WK9tzM
            shiftX: 0
            shiftY: 0
            parallaxX: 1
            parallaxY: 1
            movementX: 0
            movementY: 0
            scaleX: 1
            scaleY: 1
            repeat: repeat
        copies:
          - x: 224
            'y': 576
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: kbMRckzc3HhmR5
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 224
            'y': 480
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: BwM98jDjjTrhQB
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 224
            'y': 384
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: BwM98jDjjTrhQB
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 224
            'y': 288
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: BwM98jDjjTrhQB
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 960
            'y': 576
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: mHNBFkM2wRPTtP
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 1056
            'y': 576
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: mHNBFkM2wRPTtP
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 1152
            'y': 576
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: mHNBFkM2wRPTtP
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 960
            'y': 480
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: mHNBFkM2wRPTtP
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 1056
            'y': 480
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: mHNBFkM2wRPTtP
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 1152
            'y': 480
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: mHNBFkM2wRPTtP
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 1152
            'y': 384
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: mHNBFkM2wRPTtP
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 1056
            'y': 384
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: mHNBFkM2wRPTtP
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 960
            'y': 384
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: mHNBFkM2wRPTtP
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 960
            'y': 288
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: mHNBFkM2wRPTtP
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 1056
            'y': 288
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: mHNBFkM2wRPTtP
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 1152
            'y': 288
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: mHNBFkM2wRPTtP
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 640
            'y': 128
            opacity: 1
            tint: 16777215
            scale:
              x: 1.5
              'y': 1.5
            rotation: 0
            uid: Ftwkrj6BH92Kgq
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 640
            'y': 640
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: P6MbcPzkr5Pm9f
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 64
            'y': 64
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: kM7KtL3WdrCCqm
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 0
            'y': 0
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: kzgrhWD99djDgj
            exts: {}
            customProperties: {}
            bindings: {}
        tiles: []
        extends: {}
        lastmod: 1713653599476
        events: []
        behaviors: []
        uid: kQ857Frpn9wDm2
      - type: room
        oncreate: ''
        onstep: ''
        ondraw: ''
        onleave: ''
        gridX: 32
        gridY: 32
        diagonalGrid: false
        disableGrid: false
        simulate: true
        width: 1280
        height: 720
        restrictCamera: false
        restrictMaxX: 1280
        restrictMinX: 1280
        restrictMaxY: 720
        restrictMinY: 720
        isUi: true
        name: pauseMenu
        backgroundColor: '#B0B0B0'
        follow: -1
        backgrounds:
          - depth: 0
            texture: Tqn3Ng77WK9tzM
            shiftX: 0
            shiftY: 0
            parallaxX: 1
            parallaxY: 1
            movementX: 0
            movementY: 0
            scaleX: 1
            scaleY: 1
            repeat: repeat
        copies:
          - x: 640
            'y': 608
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: QqCMzhHwDW4cBL
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 640
            'y': 480
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: 2dcrwq4crRb7QD
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 640
            'y': 352
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: chwhJPnqzwP3hr
            exts: {}
            customProperties: {}
            bindings: {}
        tiles: []
        extends: {}
        lastmod: 1713385085986
        events: []
        behaviors: []
        uid: PkqRw2Bn3PBj6H
      - type: room
        oncreate: ''
        onstep: ''
        ondraw: ''
        onleave: ''
        gridX: 32
        gridY: 32
        diagonalGrid: false
        disableGrid: false
        simulate: true
        width: 1280
        height: 720
        restrictCamera: false
        restrictMaxX: 1280
        restrictMinX: 1280
        restrictMaxY: 720
        restrictMinY: 720
        isUi: false
        name: options
        backgroundColor: '#000000'
        follow: -1
        backgrounds:
          - depth: 0
            texture: Tqn3Ng77WK9tzM
            shiftX: 0
            shiftY: 0
            parallaxX: 1
            parallaxY: 1
            movementX: 0
            movementY: 0
            scaleX: 1
            scaleY: 1
            repeat: repeat
        copies:
          - x: 640
            'y': 384
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: fJ1242NJm2Gnrw
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 64
            'y': 64
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: kM7KtL3WdrCCqm
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 0
            'y': 0
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: kzgrhWD99djDgj
            exts: {}
            customProperties: {}
            bindings: {}
        tiles: []
        extends: {}
        lastmod: 1713653589699
        events: []
        behaviors: []
        uid: hdjp9Kjtdmm9Mh
      - type: room
        oncreate: ''
        onstep: ''
        ondraw: ''
        onleave: ''
        gridX: 32
        gridY: 32
        diagonalGrid: false
        disableGrid: false
        simulate: true
        width: 1280
        height: 720
        restrictCamera: false
        restrictMaxX: 1280
        restrictMinX: 1280
        restrictMaxY: 720
        restrictMinY: 720
        isUi: false
        name: credits
        backgroundColor: '#000000'
        follow: -1
        backgrounds:
          - depth: 0
            texture: Tqn3Ng77WK9tzM
            shiftX: 0
            shiftY: 0
            parallaxX: 1
            parallaxY: 1
            movementX: 0
            movementY: 0
            scaleX: 1
            scaleY: 1
            repeat: repeat
        copies:
          - x: 640
            'y': 352
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: kj6KqCzb194pBJ
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 64
            'y': 64
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: kM7KtL3WdrCCqm
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 0
            'y': 0
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: kzgrhWD99djDgj
            exts: {}
            customProperties: {}
            bindings: {}
        tiles: []
        extends: {}
        lastmod: 1713653608616
        events: []
        behaviors: []
        uid: 8F8L352CR9Fmmn
      - type: room
        oncreate: ''
        onstep: ''
        ondraw: ''
        onleave: ''
        gridX: 32
        gridY: 32
        diagonalGrid: false
        disableGrid: false
        simulate: true
        width: 1280
        height: 720
        restrictCamera: false
        restrictMaxX: 1280
        restrictMinX: 1280
        restrictMaxY: 720
        restrictMinY: 720
        isUi: false
        name: winScreen
        backgroundColor: '#000000'
        follow: -1
        backgrounds:
          - depth: 0
            texture: Tqn3Ng77WK9tzM
            shiftX: 0
            shiftY: 0
            parallaxX: 1
            parallaxY: 1
            movementX: 0
            movementY: 0
            scaleX: 1
            scaleY: 1
            repeat: repeat
        copies:
          - x: 640
            'y': 360
            opacity: 1
            tint: 16777215
            scale:
              x: 2
              'y': 2
            rotation: 0
            uid: JQWPJdTLbJknm1
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 640
            'y': 360
            opacity: 1
            tint: 16777215
            scale:
              x: 2
              'y': 2
            rotation: 0
            uid: HcgDQQKnPzLRLm
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 64
            'y': 64
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: kM7KtL3WdrCCqm
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 0
            'y': 0
            opacity: 1
            tint: 16777215
            scale:
              x: 1
              'y': 1
            rotation: 0
            uid: kzgrhWD99djDgj
            exts: {}
            customProperties: {}
            bindings: {}
        tiles: []
        extends: {}
        lastmod: 1713903323951
        events:
          - eventKey: OnRoomStart
            code: >-
              console.log(localStorage.getItem('winnerWinnerChickenDinner') + "
              Wins!")


              localStorage.setItem('transitioning', '1')


              if (localStorage.getItem('transitioning') === '1') {
                  localStorage.setItem('isBlackNeeded','0')
                  transition.slideIn(500, 'left')
                  localStorage.setItem('transitioning', '0')
              }
            arguments: {}
            lib: core
        behaviors: []
        uid: 4kB3pKG26cdKg1
  - type: folder
    uid: wt7zbhKgJFR14m
    colorClass: act
    icon: help-circle
    name: Behaviors
    lastmod: 1712788023612
    entries:
      - type: folder
        uid: MT1wghDfHD56WN
        colorClass: act
        icon: help-circle
        name: moveTypes
        lastmod: 1713840066620
        entries:
          - type: folder
            uid: fn6nRJQ7GBddWj
            colorClass: act
            icon: help-circle
            name: White
            lastmod: 1713841831227
            entries:
              - type: behavior
                name: bishopMoveWhite
                behaviorType: template
                events:
                  - eventKey: OnPointerClick
                    code: >-
                      // let movesetType =
                      Number(localStorage.getItem('moveType'))

                      let movesetType = this.moveType;


                      if (localStorage.getItem('whichPlayerTurn') === '1') {
                          if (movesetType === 3) {
                          //bishop movement
                          for (let direction of [[1,1],[1,-1],[-1,-1],[-1,1]]) {
                              let pos = [this.x, this.y];
                              let hit = false;
                              while (!hit) {
                                  pos[0] += direction[0]*64;
                                  pos[1] += direction[1]*64;
                                  if (pos[0] < 415-16 || pos[0] > 863+16 || pos[1] < 137-16 || pos[1] > 585+16) { // out of bounds
                                      hit = true;
                                      break;
                                  }
                                  if (place.occupied(this, pos[0], pos[1], 'White')) { // hit friendly piece
                                      hit = true;
                                      break;
                                  }
                                  if (place.occupied(this, pos[0], pos[1], 'Black')) { // hit enemy piece
                                      templates.copy('tileHighlight', pos[0], pos[1]);
                                      hit = true;
                                      break;
                                  }
                                  if (!hit) {
                                      templates.copy('tileHighlight', pos[0], pos[1]);
                                  }
                              }
                          }
                          // templates.copy('tileHighlight', this.x - 64, this.y - 64)
                          // templates.copy('tileHighlight', this.x - 64, this.y + 64)
                          // templates.copy('tileHighlight', this.x + 64, this.y - 64)
                          // templates.copy('tileHighlight', this.x + 64, this.y + 64)
                          // templates.copy('tileHighlight', this.x - 128, this.y - 128)
                          // templates.copy('tileHighlight', this.x - 128, this.y + 128)
                          // templates.copy('tileHighlight', this.x + 128, this.y - 128)
                          // templates.copy('tileHighlight', this.x + 128, this.y + 128)
                          // templates.copy('tileHighlight', this.x - 192, this.y - 192)
                          // templates.copy('tileHighlight', this.x - 192, this.y + 192)
                          // templates.copy('tileHighlight', this.x + 192, this.y - 192)
                          // templates.copy('tileHighlight', this.x + 192, this.y + 192)
                          // templates.copy('tileHighlight', this.x - 256, this.y - 256)
                          // templates.copy('tileHighlight', this.x - 256, this.y + 256)
                          // templates.copy('tileHighlight', this.x + 256, this.y - 256)
                          // templates.copy('tileHighlight', this.x + 256, this.y + 256)
                          // templates.copy('tileHighlight', this.x - 320, this.y - 320)
                          // templates.copy('tileHighlight', this.x - 320, this.y + 320)
                          // templates.copy('tileHighlight', this.x + 320, this.y - 320)
                          // templates.copy('tileHighlight', this.x + 320, this.y + 320)
                          // templates.copy('tileHighlight', this.x - 384, this.y - 384)
                          // templates.copy('tileHighlight', this.x - 384, this.y + 384)
                          // templates.copy('tileHighlight', this.x + 384, this.y - 384)
                          // templates.copy('tileHighlight', this.x + 384, this.y + 384)
                          // templates.copy('tileHighlight', this.x - 448, this.y - 448)
                          // templates.copy('tileHighlight', this.x - 448, this.y + 448)
                          // templates.copy('tileHighlight', this.x + 448, this.y - 448)
                          // templates.copy('tileHighlight', this.x + 448, this.y + 448)
                          // templates.copy('tileHighlight', this.x - 512, this.y - 512)
                          // templates.copy('tileHighlight', this.x - 512, this.y + 512)
                          // templates.copy('tileHighlight', this.x + 512, this.y - 512)
                          // templates.copy('tileHighlight', this.x + 512, this.y + 512)
                      }

                      }
                    arguments: {}
                    lib: core
                specification: []
                lastmod: 1713922933398
                uid: JpzwtHfC8W7DLL
              - type: behavior
                name: kingMoveWhite
                behaviorType: template
                events:
                  - eventKey: OnPointerClick
                    code: >-
                      // let movesetType =
                      Number(localStorage.getItem('moveType'))

                      let movesetType = this.moveType;


                      if (localStorage.getItem('whichPlayerTurn') === '1') {
                          if (movesetType === 5) {
                              //king movement
                              templates.copy('tileHighlight', this.x - 64, this.y) // left
                              templates.copy('tileHighlight', this.x + 64, this.y) // right
                              templates.copy('tileHighlight', this.x, this.y - 64) // up
                              templates.copy('tileHighlight', this.x, this.y + 64) // down
                              // JOSH KINGS CAN MOVE IN ALL 8 DIRECTIONS
                              templates.copy('tileHighlight', this.x - 64, this.y - 64) // left
                              templates.copy('tileHighlight', this.x - 64, this.y + 64) // right
                              templates.copy('tileHighlight', this.x + 64, this.y - 64) // up
                              templates.copy('tileHighlight', this.x + 64, this.y + 64) // down
                          }
                      }
                    arguments: {}
                    lib: core
                specification: []
                lastmod: 1713922933421
                uid: gf9cpcJ4MJMdmQ
              - type: behavior
                name: knightMoveWhite
                behaviorType: template
                events:
                  - eventKey: OnPointerClick
                    code: >-
                      // let movesetType =
                      Number(localStorage.getItem('moveType'))

                      let movesetType = this.moveType;


                      if (localStorage.getItem('whichPlayerTurn') === '1') {
                          if (movesetType === 1) {
                          //knight movement
                          templates.copy('tileHighlight', this.x + 64, this.y - 128) // up two right one
                          templates.copy('tileHighlight', this.x + 128, this.y - 64) //right two up one
                          templates.copy('tileHighlight', this.x + 128, this.y + 64) //right two down one
                          templates.copy('tileHighlight', this.x + 64, this.y + 128) //down two right one
                          templates.copy('tileHighlight', this.x - 64, this.y + 128) //down two left one
                          templates.copy('tileHighlight', this.x - 128, this.y + 64) // left two down one
                          templates.copy('tileHighlight', this.x - 128, this.y - 64) // left two up one
                          templates.copy('tileHighlight', this.x - 64, this.y - 128) // up two left one
                      }

                      }
                    arguments: {}
                    lib: core
                specification: []
                lastmod: 1713922933430
                uid: jrGK6Dqmjb8NPd
              - type: behavior
                name: pawnMoveWhite
                behaviorType: template
                events:
                  - eventKey: OnPointerClick
                    code: >-
                      // let movesetType =
                      Number(localStorage.getItem('moveType'))

                      let movesetType = this.moveType;


                      if (movesetType === 0) {
                          //pawn movement
                          if (!(place.occupied(this, this.x, this.y - 64, 'White') || place.occupied(this, this.x, this.y - 64, 'Black'))) {
                              templates.copy('tileHighlight', this.x , this.y - 64)
                              if (!this.madeMove) {
                                  if (!(place.occupied(this, this.x, this.y - 128, 'White') || place.occupied(this, this.x, this.y - 128, 'Black'))) {
                                      templates.copy('tileHighlight', this.x , this.y - 128)
                                  }
                              }
                          }

                          if (place.occupied(this, this.x - 64, this.y - 64, 'Black')) { // capture left
                              templates.copy('tileHighlight', this.x - 64, this.y - 64)
                          }
                          if (place.occupied(this, this.x + 64, this.y - 64, 'Black')) { // capture right
                              templates.copy('tileHighlight', this.x + 64, this.y - 64)
                          }
                      }
                    arguments: {}
                    lib: core
                specification: []
                lastmod: 1713922933433
                uid: Md8CWCW3bH4TcW
              - type: behavior
                name: queenMoveWhite
                behaviorType: template
                events:
                  - eventKey: OnPointerClick
                    code: >-
                      // let movesetType =
                      Number(localStorage.getItem('moveType'))

                      let movesetType = this.moveType;


                      if (localStorage.getItem('whichPlayerTurn') === '1') {
                          if (movesetType === 4) {
                          for (let direction of [[1,1],[1,-1],[-1,-1],[-1,1],[1,0],[0,1],[-1,0],[0,-1]]) {
                              let pos = [this.x, this.y];
                              let hit = false;
                              while (!hit) {
                                  pos[0] += direction[0]*64;
                                  pos[1] += direction[1]*64;
                                  if (pos[0] < 415-16 || pos[0] > 863+16 || pos[1] < 137-16 || pos[1] > 585+16) { // out of bounds
                                      hit = true;
                                      break;
                                  }
                                  if (place.occupied(this, pos[0], pos[1], 'White')) { // hit friendly piece
                                      hit = true;
                                      break;
                                  }
                                  if (place.occupied(this, pos[0], pos[1], 'Black')) { // hit enemy piece
                                      templates.copy('tileHighlight', pos[0], pos[1]);
                                      hit = true;
                                      break;
                                  }
                                  if (!hit) {
                                      templates.copy('tileHighlight', pos[0], pos[1]);
                                  }
                              }
                          }
                          // templates.copy('tileHighlight', this.x - 64, this.y - 64)
                          // templates.copy('tileHighlight', this.x - 64, this.y + 64)
                          // templates.copy('tileHighlight', this.x + 64, this.y - 64)
                          // templates.copy('tileHighlight', this.x + 64, this.y + 64)
                          // templates.copy('tileHighlight', this.x - 128, this.y - 128)
                          // templates.copy('tileHighlight', this.x - 128, this.y + 128)
                          // templates.copy('tileHighlight', this.x + 128, this.y - 128)
                          // templates.copy('tileHighlight', this.x + 128, this.y + 128)
                          // templates.copy('tileHighlight', this.x - 192, this.y - 192)
                          // templates.copy('tileHighlight', this.x - 192, this.y + 192)
                          // templates.copy('tileHighlight', this.x + 192, this.y - 192)
                          // templates.copy('tileHighlight', this.x + 192, this.y + 192)
                          // templates.copy('tileHighlight', this.x - 256, this.y - 256)
                          // templates.copy('tileHighlight', this.x - 256, this.y + 256)
                          // templates.copy('tileHighlight', this.x + 256, this.y - 256)
                          // templates.copy('tileHighlight', this.x + 256, this.y + 256)
                          // templates.copy('tileHighlight', this.x - 320, this.y - 320)
                          // templates.copy('tileHighlight', this.x - 320, this.y + 320)
                          // templates.copy('tileHighlight', this.x + 320, this.y - 320)
                          // templates.copy('tileHighlight', this.x + 320, this.y + 320)
                          // templates.copy('tileHighlight', this.x - 384, this.y - 384)
                          // templates.copy('tileHighlight', this.x - 384, this.y + 384)
                          // templates.copy('tileHighlight', this.x + 384, this.y - 384)
                          // templates.copy('tileHighlight', this.x + 384, this.y + 384)
                          // templates.copy('tileHighlight', this.x - 448, this.y - 448)
                          // templates.copy('tileHighlight', this.x - 448, this.y + 448)
                          // templates.copy('tileHighlight', this.x + 448, this.y - 448)
                          // templates.copy('tileHighlight', this.x + 448, this.y + 448)
                          // templates.copy('tileHighlight', this.x - 512, this.y - 512)
                          // templates.copy('tileHighlight', this.x - 512, this.y + 512)
                          // templates.copy('tileHighlight', this.x + 512, this.y - 512)
                          // templates.copy('tileHighlight', this.x + 512, this.y + 512)

                          // templates.copy('tileHighlight', this.x - 64, this.y) // left
                          //     templates.copy('tileHighlight', this.x + 64, this.y)// right
                          //     templates.copy('tileHighlight', this.x, this.y - 64) // up
                          //     templates.copy('tileHighlight', this.x, this.y + 64) // down
                          //     templates.copy('tileHighlight', this.x - 128, this.y) // left x2
                          //     templates.copy('tileHighlight', this.x + 128, this.y) // right x2
                          //     templates.copy('tileHighlight', this.x, this.y - 128) // up x2
                          //     templates.copy('tileHighlight', this.x, this.y + 128) // down x2
                          //     templates.copy('tileHighlight', this.x - 192, this.y) // left x3
                          //     templates.copy('tileHighlight', this.x + 192, this.y) // right x3
                          //     templates.copy('tileHighlight', this.x, this.y - 192) // up x3
                          //     templates.copy('tileHighlight', this.x, this.y + 192) // down x3
                          //     templates.copy('tileHighlight', this.x - 256, this.y) // left x4
                          //     templates.copy('tileHighlight', this.x + 256, this.y) // right x4
                          //     templates.copy('tileHighlight', this.x, this.y - 256) // up x4
                          //     templates.copy('tileHighlight', this.x, this.y + 256) // down x4
                          //     templates.copy('tileHighlight', this.x - 320, this.y) // left x5
                          //     templates.copy('tileHighlight', this.x + 320, this.y) // right x5
                          //     templates.copy('tileHighlight', this.x, this.y - 320) // up x5
                          //     templates.copy('tileHighlight', this.x, this.y + 320) // down x5
                          //     templates.copy('tileHighlight', this.x - 384, this.y) // left x6
                          //     templates.copy('tileHighlight', this.x + 384, this.y) // right x6
                          //     templates.copy('tileHighlight', this.x, this.y - 384) // up x6
                          //     templates.copy('tileHighlight', this.x, this.y + 384) // down x6
                          //     templates.copy('tileHighlight', this.x - 448, this.y) // left x7
                          //     templates.copy('tileHighlight', this.x + 448, this.y) // right x7
                          //     templates.copy('tileHighlight', this.x, this.y - 448) // up x7
                          //     templates.copy('tileHighlight', this.x, this.y + 448) // down x7
                          //     templates.copy('tileHighlight', this.x - 448, this.y) // left x8
                          //     templates.copy('tileHighlight', this.x + 448, this.y) // right x8
                          //     templates.copy('tileHighlight', this.x, this.y - 448) // up x8
                          //     templates.copy('tileHighlight', this.x, this.y + 448) // down x8
                          //     templates.copy('tileHighlight', this.x - 512, this.y) // left x8
                          //     templates.copy('tileHighlight', this.x + 512, this.y) // right x8
                          //     templates.copy('tileHighlight', this.x, this.y - 512) // up x8
                          //     templates.copy('tileHighlight', this.x, this.y + 512) // down x8
                      }

                      }
                    arguments: {}
                    lib: core
                specification: []
                lastmod: 1713922933436
                uid: RhhdhCbR2dnB7M
              - type: behavior
                name: rookMoveWhite
                behaviorType: template
                events:
                  - eventKey: OnPointerClick
                    code: >-
                      // let movesetType =
                      Number(localStorage.getItem('moveType'))

                      let movesetType = this.moveType;


                      if (localStorage.getItem('whichPlayerTurn') === '1') {
                          if (movesetType === 2) {
                              //rook movement
                              for (let direction of [[1,0],[0,1],[-1,0],[0,-1]]) {
                                  let pos = [this.x, this.y];
                                  let hit = false;
                                  while (!hit) {
                                      pos[0] += direction[0]*64;
                                      pos[1] += direction[1]*64;
                                      if (pos[0] < 415-16 || pos[0] > 863+16 || pos[1] < 137-16 || pos[1] > 585+16) { // out of bounds
                                          hit = true;
                                          break;
                                      }
                                      if (place.occupied(this, pos[0], pos[1], 'White')) { // hit friendly piece
                                          hit = true;
                                          break;
                                      }
                                      if (place.occupied(this, pos[0], pos[1], 'Black')) { // hit enemy piece
                                          templates.copy('tileHighlight', pos[0], pos[1]);
                                          hit = true;
                                          break;
                                      }
                                      if (!hit) {
                                          templates.copy('tileHighlight', pos[0], pos[1]);
                                      }
                                  }
                              }
                              // templates.copy('tileHighlight', this.x - 64, this.y) // left
                              // templates.copy('tileHighlight', this.x + 64, this.y)// right
                              // templates.copy('tileHighlight', this.x, this.y - 64) // up
                              // templates.copy('tileHighlight', this.x, this.y + 64) // down
                              // templates.copy('tileHighlight', this.x - 128, this.y) // left x2
                              // templates.copy('tileHighlight', this.x + 128, this.y) // right x2
                              // templates.copy('tileHighlight', this.x, this.y - 128) // up x2
                              // templates.copy('tileHighlight', this.x, this.y + 128) // down x2
                              // templates.copy('tileHighlight', this.x - 192, this.y) // left x3
                              // templates.copy('tileHighlight', this.x + 192, this.y) // right x3
                              // templates.copy('tileHighlight', this.x, this.y - 192) // up x3
                              // templates.copy('tileHighlight', this.x, this.y + 192) // down x3
                              // templates.copy('tileHighlight', this.x - 256, this.y) // left x4
                              // templates.copy('tileHighlight', this.x + 256, this.y) // right x4
                              // templates.copy('tileHighlight', this.x, this.y - 256) // up x4
                              // templates.copy('tileHighlight', this.x, this.y + 256) // down x4
                              // templates.copy('tileHighlight', this.x - 320, this.y) // left x5
                              // templates.copy('tileHighlight', this.x + 320, this.y) // right x5
                              // templates.copy('tileHighlight', this.x, this.y - 320) // up x5
                              // templates.copy('tileHighlight', this.x, this.y + 320) // down x5
                              // templates.copy('tileHighlight', this.x - 384, this.y) // left x6
                              // templates.copy('tileHighlight', this.x + 384, this.y) // right x6
                              // templates.copy('tileHighlight', this.x, this.y - 384) // up x6
                              // templates.copy('tileHighlight', this.x, this.y + 384) // down x6
                              // templates.copy('tileHighlight', this.x - 448, this.y) // left x7
                              // templates.copy('tileHighlight', this.x + 448, this.y) // right x7
                              // templates.copy('tileHighlight', this.x, this.y - 448) // up x7
                              // templates.copy('tileHighlight', this.x, this.y + 448) // down x7
                              // templates.copy('tileHighlight', this.x - 448, this.y) // left x8
                              // templates.copy('tileHighlight', this.x + 448, this.y) // right x8
                              // templates.copy('tileHighlight', this.x, this.y - 448) // up x8
                              // templates.copy('tileHighlight', this.x, this.y + 448) // down x8
                              // templates.copy('tileHighlight', this.x - 512, this.y) // left x8
                              // templates.copy('tileHighlight', this.x + 512, this.y) // right x8
                              // templates.copy('tileHighlight', this.x, this.y - 512) // up x8
                              // templates.copy('tileHighlight', this.x, this.y + 512) // down x8
                          }
                      }
                    arguments: {}
                    lib: core
                specification: []
                lastmod: 1713922933439
                uid: dQ8HQ1DdftWz2W
          - type: folder
            uid: m18HQK5CP3RK4B
            colorClass: act
            icon: help-circle
            name: Black
            lastmod: 1713841835670
            entries:
              - type: behavior
                name: bishopMoveBlack
                behaviorType: template
                events:
                  - eventKey: OnPointerClick
                    code: >-
                      // let movesetType =
                      Number(localStorage.getItem('moveType'))

                      let movesetType = this.moveType;


                      if (localStorage.getItem('whichPlayerTurn') === '2') {
                          if (movesetType === 3) {
                          //bishop movement
                          for (let direction of [[1,1],[1,-1],[-1,-1],[-1,1]]) {
                              let pos = [this.x, this.y];
                              let hit = false;
                              while (!hit) {
                                  pos[0] += direction[0]*64;
                                  pos[1] += direction[1]*64;
                                  if (pos[0] < 415-16 || pos[0] > 863+16 || pos[1] < 137-16 || pos[1] > 585+16) { // out of bounds
                                      hit = true;
                                      break;
                                  }
                                  if (place.occupied(this, pos[0], pos[1], 'Black')) { // hit friendly piece
                                      hit = true;
                                      break;
                                  }
                                  if (place.occupied(this, pos[0], pos[1], 'White')) { // hit enemy piece
                                      templates.copy('tileHighlight', pos[0], pos[1]);
                                      hit = true;
                                      break;
                                  }
                                  if (!hit) {
                                      templates.copy('tileHighlight', pos[0], pos[1]);
                                  }
                              }
                          }
                          // templates.copy('tileHighlight', this.x - 64, this.y - 64)
                          // templates.copy('tileHighlight', this.x - 64, this.y + 64)
                          // templates.copy('tileHighlight', this.x + 64, this.y - 64)
                          // templates.copy('tileHighlight', this.x + 64, this.y + 64)
                          // templates.copy('tileHighlight', this.x - 128, this.y - 128)
                          // templates.copy('tileHighlight', this.x - 128, this.y + 128)
                          // templates.copy('tileHighlight', this.x + 128, this.y - 128)
                          // templates.copy('tileHighlight', this.x + 128, this.y + 128)
                          // templates.copy('tileHighlight', this.x - 192, this.y - 192)
                          // templates.copy('tileHighlight', this.x - 192, this.y + 192)
                          // templates.copy('tileHighlight', this.x + 192, this.y - 192)
                          // templates.copy('tileHighlight', this.x + 192, this.y + 192)
                          // templates.copy('tileHighlight', this.x - 256, this.y - 256)
                          // templates.copy('tileHighlight', this.x - 256, this.y + 256)
                          // templates.copy('tileHighlight', this.x + 256, this.y - 256)
                          // templates.copy('tileHighlight', this.x + 256, this.y + 256)
                          // templates.copy('tileHighlight', this.x - 320, this.y - 320)
                          // templates.copy('tileHighlight', this.x - 320, this.y + 320)
                          // templates.copy('tileHighlight', this.x + 320, this.y - 320)
                          // templates.copy('tileHighlight', this.x + 320, this.y + 320)
                          // templates.copy('tileHighlight', this.x - 384, this.y - 384)
                          // templates.copy('tileHighlight', this.x - 384, this.y + 384)
                          // templates.copy('tileHighlight', this.x + 384, this.y - 384)
                          // templates.copy('tileHighlight', this.x + 384, this.y + 384)
                          // templates.copy('tileHighlight', this.x - 448, this.y - 448)
                          // templates.copy('tileHighlight', this.x - 448, this.y + 448)
                          // templates.copy('tileHighlight', this.x + 448, this.y - 448)
                          // templates.copy('tileHighlight', this.x + 448, this.y + 448)
                          // templates.copy('tileHighlight', this.x - 512, this.y - 512)
                          // templates.copy('tileHighlight', this.x - 512, this.y + 512)
                          // templates.copy('tileHighlight', this.x + 512, this.y - 512)
                          // templates.copy('tileHighlight', this.x + 512, this.y + 512)
                      }

                      }
                    arguments: {}
                    lib: core
                specification: []
                lastmod: 1713921776612
                uid: zn6CnBrBLc1BFh
              - type: behavior
                name: kingMoveBlack
                behaviorType: template
                events:
                  - eventKey: OnPointerClick
                    code: >-
                      // let movesetType =
                      Number(localStorage.getItem('moveType'))

                      let movesetType = this.moveType;


                      if (localStorage.getItem('whichPlayerTurn') === '2') {
                          if (movesetType === 5) {
                              //king movement
                              templates.copy('tileHighlight', this.x - 64, this.y) // left
                              templates.copy('tileHighlight', this.x + 64, this.y) // right
                              templates.copy('tileHighlight', this.x, this.y - 64) // up
                              templates.copy('tileHighlight', this.x, this.y + 64) // down
                              // JOSH KINGS CAN MOVE IN ALL 8 DIRECTIONS
                              templates.copy('tileHighlight', this.x - 64, this.y - 64) // left
                              templates.copy('tileHighlight', this.x - 64, this.y + 64) // right
                              templates.copy('tileHighlight', this.x + 64, this.y - 64) // up
                              templates.copy('tileHighlight', this.x + 64, this.y + 64) // down
                          }
                      }
                    arguments: {}
                    lib: core
                specification: []
                lastmod: 1713922888556
                uid: RgCwFJQzzJj2J5
              - type: behavior
                name: knightMoveBlack
                behaviorType: template
                events:
                  - eventKey: OnPointerClick
                    code: >-
                      // let movesetType =
                      Number(localStorage.getItem('moveType'))

                      let movesetType = this.moveType;


                      if (localStorage.getItem('whichPlayerTurn') === '2') {
                          if (movesetType === 1) {
                          //knight movement
                          templates.copy('tileHighlight', this.x + 64, this.y - 128) // up two right one
                          templates.copy('tileHighlight', this.x + 128, this.y - 64) //right two up one
                          templates.copy('tileHighlight', this.x + 128, this.y + 64) //right two down one
                          templates.copy('tileHighlight', this.x + 64, this.y + 128) //down two right one
                          templates.copy('tileHighlight', this.x - 64, this.y + 128) //down two left one
                          templates.copy('tileHighlight', this.x - 128, this.y + 64) // left two down one
                          templates.copy('tileHighlight', this.x - 128, this.y - 64) // left two up one
                          templates.copy('tileHighlight', this.x - 64, this.y - 128) // up two left one
                      }

                      }
                    arguments: {}
                    lib: core
                specification: []
                lastmod: 1713922888583
                uid: kJ4Gb1G34pgkt8
              - type: behavior
                name: pawnMoveBlack
                behaviorType: template
                events:
                  - eventKey: OnPointerClick
                    code: >-
                      // let movesetType =
                      Number(localStorage.getItem('moveType'))

                      let movesetType = this.moveType;


                      if (localStorage.getItem('whichPlayerTurn') === '2') {
                          if (movesetType === 0) {
                              //pawn movement
                              if (!(place.occupied(this, this.x, this.y + 64, 'White') || place.occupied(this, this.x, this.y + 64, 'Black'))) {
                                  templates.copy('tileHighlight', this.x , this.y + 64)
                                  if (!this.madeMove) {
                                      if (!(place.occupied(this, this.x, this.y + 128, 'White') || place.occupied(this, this.x, this.y + 128, 'Black'))) {
                                          templates.copy('tileHighlight', this.x , this.y + 128)
                                      }
                                  }
                              }

                              if (place.occupied(this, this.x - 64, this.y + 64, 'White')) { // capture left
                                  templates.copy('tileHighlight', this.x - 64, this.y + 64)
                              }
                              if (place.occupied(this, this.x + 64, this.y + 64, 'White')) { // capture right
                                  templates.copy('tileHighlight', this.x + 64, this.y + 64)
                              }
                          }
                      }
                    arguments: {}
                    lib: core
                specification: []
                lastmod: 1713934523932
                uid: 7tqF4N6kwND23N
              - type: behavior
                name: queenMoveBlack
                behaviorType: template
                events:
                  - eventKey: OnPointerClick
                    code: >-
                      // let movesetType =
                      Number(localStorage.getItem('moveType'))

                      let movesetType = this.moveType;


                      if (localStorage.getItem('whichPlayerTurn') === '2') {
                          if (movesetType === 4) {
                          for (let direction of [[1,1],[1,-1],[-1,-1],[-1,1],[1,0],[0,1],[-1,0],[0,-1]]) {
                              let pos = [this.x, this.y];
                              let hit = false;
                              while (!hit) {
                                  pos[0] += direction[0]*64;
                                  pos[1] += direction[1]*64;
                                  if (pos[0] < 415-16 || pos[0] > 863+16 || pos[1] < 137-16 || pos[1] > 585+16) { // out of bounds
                                      hit = true;
                                      break;
                                  }
                                  if (place.occupied(this, pos[0], pos[1], 'Black')) { // hit friendly piece
                                      hit = true;
                                      break;
                                  }
                                  if (place.occupied(this, pos[0], pos[1], 'White')) { // hit enemy piece
                                      templates.copy('tileHighlight', pos[0], pos[1]);
                                      hit = true;
                                      break;
                                  }
                                  if (!hit) {
                                      templates.copy('tileHighlight', pos[0], pos[1]);
                                  }
                              }
                          }
                          // templates.copy('tileHighlight', this.x - 64, this.y - 64)
                          // templates.copy('tileHighlight', this.x - 64, this.y + 64)
                          // templates.copy('tileHighlight', this.x + 64, this.y - 64)
                          // templates.copy('tileHighlight', this.x + 64, this.y + 64)
                          // templates.copy('tileHighlight', this.x - 128, this.y - 128)
                          // templates.copy('tileHighlight', this.x - 128, this.y + 128)
                          // templates.copy('tileHighlight', this.x + 128, this.y - 128)
                          // templates.copy('tileHighlight', this.x + 128, this.y + 128)
                          // templates.copy('tileHighlight', this.x - 192, this.y - 192)
                          // templates.copy('tileHighlight', this.x - 192, this.y + 192)
                          // templates.copy('tileHighlight', this.x + 192, this.y - 192)
                          // templates.copy('tileHighlight', this.x + 192, this.y + 192)
                          // templates.copy('tileHighlight', this.x - 256, this.y - 256)
                          // templates.copy('tileHighlight', this.x - 256, this.y + 256)
                          // templates.copy('tileHighlight', this.x + 256, this.y - 256)
                          // templates.copy('tileHighlight', this.x + 256, this.y + 256)
                          // templates.copy('tileHighlight', this.x - 320, this.y - 320)
                          // templates.copy('tileHighlight', this.x - 320, this.y + 320)
                          // templates.copy('tileHighlight', this.x + 320, this.y - 320)
                          // templates.copy('tileHighlight', this.x + 320, this.y + 320)
                          // templates.copy('tileHighlight', this.x - 384, this.y - 384)
                          // templates.copy('tileHighlight', this.x - 384, this.y + 384)
                          // templates.copy('tileHighlight', this.x + 384, this.y - 384)
                          // templates.copy('tileHighlight', this.x + 384, this.y + 384)
                          // templates.copy('tileHighlight', this.x - 448, this.y - 448)
                          // templates.copy('tileHighlight', this.x - 448, this.y + 448)
                          // templates.copy('tileHighlight', this.x + 448, this.y - 448)
                          // templates.copy('tileHighlight', this.x + 448, this.y + 448)
                          // templates.copy('tileHighlight', this.x - 512, this.y - 512)
                          // templates.copy('tileHighlight', this.x - 512, this.y + 512)
                          // templates.copy('tileHighlight', this.x + 512, this.y - 512)
                          // templates.copy('tileHighlight', this.x + 512, this.y + 512)

                          // templates.copy('tileHighlight', this.x - 64, this.y) // left
                          //     templates.copy('tileHighlight', this.x + 64, this.y)// right
                          //     templates.copy('tileHighlight', this.x, this.y - 64) // up
                          //     templates.copy('tileHighlight', this.x, this.y + 64) // down
                          //     templates.copy('tileHighlight', this.x - 128, this.y) // left x2
                          //     templates.copy('tileHighlight', this.x + 128, this.y) // right x2
                          //     templates.copy('tileHighlight', this.x, this.y - 128) // up x2
                          //     templates.copy('tileHighlight', this.x, this.y + 128) // down x2
                          //     templates.copy('tileHighlight', this.x - 192, this.y) // left x3
                          //     templates.copy('tileHighlight', this.x + 192, this.y) // right x3
                          //     templates.copy('tileHighlight', this.x, this.y - 192) // up x3
                          //     templates.copy('tileHighlight', this.x, this.y + 192) // down x3
                          //     templates.copy('tileHighlight', this.x - 256, this.y) // left x4
                          //     templates.copy('tileHighlight', this.x + 256, this.y) // right x4
                          //     templates.copy('tileHighlight', this.x, this.y - 256) // up x4
                          //     templates.copy('tileHighlight', this.x, this.y + 256) // down x4
                          //     templates.copy('tileHighlight', this.x - 320, this.y) // left x5
                          //     templates.copy('tileHighlight', this.x + 320, this.y) // right x5
                          //     templates.copy('tileHighlight', this.x, this.y - 320) // up x5
                          //     templates.copy('tileHighlight', this.x, this.y + 320) // down x5
                          //     templates.copy('tileHighlight', this.x - 384, this.y) // left x6
                          //     templates.copy('tileHighlight', this.x + 384, this.y) // right x6
                          //     templates.copy('tileHighlight', this.x, this.y - 384) // up x6
                          //     templates.copy('tileHighlight', this.x, this.y + 384) // down x6
                          //     templates.copy('tileHighlight', this.x - 448, this.y) // left x7
                          //     templates.copy('tileHighlight', this.x + 448, this.y) // right x7
                          //     templates.copy('tileHighlight', this.x, this.y - 448) // up x7
                          //     templates.copy('tileHighlight', this.x, this.y + 448) // down x7
                          //     templates.copy('tileHighlight', this.x - 448, this.y) // left x8
                          //     templates.copy('tileHighlight', this.x + 448, this.y) // right x8
                          //     templates.copy('tileHighlight', this.x, this.y - 448) // up x8
                          //     templates.copy('tileHighlight', this.x, this.y + 448) // down x8
                          //     templates.copy('tileHighlight', this.x - 512, this.y) // left x8
                          //     templates.copy('tileHighlight', this.x + 512, this.y) // right x8
                          //     templates.copy('tileHighlight', this.x, this.y - 512) // up x8
                          //     templates.copy('tileHighlight', this.x, this.y + 512) // down x8
                      }

                      }
                    arguments: {}
                    lib: core
                specification: []
                lastmod: 1713922888592
                uid: fGRmt3c7QthKzm
              - type: behavior
                name: rookMoveBlack
                behaviorType: template
                events:
                  - eventKey: OnPointerClick
                    code: >-
                      // let movesetType =
                      Number(localStorage.getItem('moveType'))

                      let movesetType = this.moveType;


                      if (localStorage.getItem('whichPlayerTurn') === '2') {
                          if (movesetType === 2) {
                              //rook movement
                              for (let direction of [[1,0],[0,1],[-1,0],[0,-1]]) {
                                  let pos = [this.x, this.y];
                                  let hit = false;
                                  while (!hit) {
                                      pos[0] += direction[0]*64;
                                      pos[1] += direction[1]*64;
                                      if (pos[0] < 415-16 || pos[0] > 863+16 || pos[1] < 137-16 || pos[1] > 585+16) { // out of bounds
                                          hit = true;
                                          break;
                                      }
                                      if (place.occupied(this, pos[0], pos[1], 'Black')) { // hit friendly piece
                                          hit = true;
                                          break;
                                      }
                                      if (place.occupied(this, pos[0], pos[1], 'White')) { // hit enemy piece
                                          templates.copy('tileHighlight', pos[0], pos[1]);
                                          hit = true;
                                          break;
                                      }
                                      if (!hit) {
                                          templates.copy('tileHighlight', pos[0], pos[1]);
                                      }
                                  }
                              }
                              // templates.copy('tileHighlight', this.x - 64, this.y) // left
                              // templates.copy('tileHighlight', this.x + 64, this.y)// right
                              // templates.copy('tileHighlight', this.x, this.y - 64) // up
                              // templates.copy('tileHighlight', this.x, this.y + 64) // down
                              // templates.copy('tileHighlight', this.x - 128, this.y) // left x2
                              // templates.copy('tileHighlight', this.x + 128, this.y) // right x2
                              // templates.copy('tileHighlight', this.x, this.y - 128) // up x2
                              // templates.copy('tileHighlight', this.x, this.y + 128) // down x2
                              // templates.copy('tileHighlight', this.x - 192, this.y) // left x3
                              // templates.copy('tileHighlight', this.x + 192, this.y) // right x3
                              // templates.copy('tileHighlight', this.x, this.y - 192) // up x3
                              // templates.copy('tileHighlight', this.x, this.y + 192) // down x3
                              // templates.copy('tileHighlight', this.x - 256, this.y) // left x4
                              // templates.copy('tileHighlight', this.x + 256, this.y) // right x4
                              // templates.copy('tileHighlight', this.x, this.y - 256) // up x4
                              // templates.copy('tileHighlight', this.x, this.y + 256) // down x4
                              // templates.copy('tileHighlight', this.x - 320, this.y) // left x5
                              // templates.copy('tileHighlight', this.x + 320, this.y) // right x5
                              // templates.copy('tileHighlight', this.x, this.y - 320) // up x5
                              // templates.copy('tileHighlight', this.x, this.y + 320) // down x5
                              // templates.copy('tileHighlight', this.x - 384, this.y) // left x6
                              // templates.copy('tileHighlight', this.x + 384, this.y) // right x6
                              // templates.copy('tileHighlight', this.x, this.y - 384) // up x6
                              // templates.copy('tileHighlight', this.x, this.y + 384) // down x6
                              // templates.copy('tileHighlight', this.x - 448, this.y) // left x7
                              // templates.copy('tileHighlight', this.x + 448, this.y) // right x7
                              // templates.copy('tileHighlight', this.x, this.y - 448) // up x7
                              // templates.copy('tileHighlight', this.x, this.y + 448) // down x7
                              // templates.copy('tileHighlight', this.x - 448, this.y) // left x8
                              // templates.copy('tileHighlight', this.x + 448, this.y) // right x8
                              // templates.copy('tileHighlight', this.x, this.y - 448) // up x8
                              // templates.copy('tileHighlight', this.x, this.y + 448) // down x8
                              // templates.copy('tileHighlight', this.x - 512, this.y) // left x8
                              // templates.copy('tileHighlight', this.x + 512, this.y) // right x8
                              // templates.copy('tileHighlight', this.x, this.y - 512) // up x8
                              // templates.copy('tileHighlight', this.x, this.y + 512) // down x8
                          }
                      }
                    arguments: {}
                    lib: core
                specification: []
                lastmod: 1713922888595
                uid: NzG5gtKM76Ldg8
      - type: behavior
        name: MovementRNG
        behaviorType: template
        events:
          - eventKey: OnStep
            code: |-
              if (localStorage.getItem('moveTypeLocked') === '0') {
                  let roll = Math.floor(random(20));
                  console.log(roll);
                  if (roll == 0) { // 1 in 20
                      let moveType = random(5)
                      moveType = Math.round(moveType)
                      localStorage.setItem('moveType',moveType.toString())
                      // i hate this
                      for (let copy of templates.list['blackpiecebishop1']) { copy.moveType = moveType }
                      for (let copy of templates.list['blackpiecebishop2']) { copy.moveType = moveType }
                      for (let copy of templates.list['blackpieceking']) { copy.moveType = moveType }
                      for (let copy of templates.list['blackpieceknight1']) { copy.moveType = moveType }
                      for (let copy of templates.list['blackpieceknight2']) { copy.moveType = moveType }
                      for (let copy of templates.list['blackpiecepawn1']) { copy.moveType = moveType }
                      for (let copy of templates.list['blackpiecepawn2']) { copy.moveType = moveType }
                      for (let copy of templates.list['blackpiecepawn3']) { copy.moveType = moveType }
                      for (let copy of templates.list['blackpiecepawn4']) { copy.moveType = moveType }
                      for (let copy of templates.list['blackpiecepawn5']) { copy.moveType = moveType }
                      for (let copy of templates.list['blackpiecepawn6']) { copy.moveType = moveType }
                      for (let copy of templates.list['blackpiecepawn7']) { copy.moveType = moveType }
                      for (let copy of templates.list['blackpiecepawn8']) { copy.moveType = moveType }
                      for (let copy of templates.list['blackpiecequeen']) { copy.moveType = moveType }
                      for (let copy of templates.list['blackpiecerook1']) { copy.moveType = moveType }
                      for (let copy of templates.list['blackpiecerook2']) { copy.moveType = moveType }
                      
                      for (let copy of templates.list['whitepiecebishop1']) { copy.moveType = moveType }
                      for (let copy of templates.list['whitepiecebishop2']) { copy.moveType = moveType }
                      for (let copy of templates.list['whitepieceking']) { copy.moveType = moveType }
                      for (let copy of templates.list['whitepieceknight1']) { copy.moveType = moveType }
                      for (let copy of templates.list['whitepieceknight2']) { copy.moveType = moveType }
                      for (let copy of templates.list['whitepiecepawn1']) { copy.moveType = moveType }
                      for (let copy of templates.list['whitepiecepawn2']) { copy.moveType = moveType }
                      for (let copy of templates.list['whitepiecepawn3']) { copy.moveType = moveType }
                      for (let copy of templates.list['whitepiecepawn4']) { copy.moveType = moveType }
                      for (let copy of templates.list['whitepiecepawn5']) { copy.moveType = moveType }
                      for (let copy of templates.list['whitepiecepawn6']) { copy.moveType = moveType }
                      for (let copy of templates.list['whitepiecepawn7']) { copy.moveType = moveType }
                      for (let copy of templates.list['whitepiecepawn8']) { copy.moveType = moveType }
                      for (let copy of templates.list['whitepiecequeen']) { copy.moveType = moveType }
                      for (let copy of templates.list['whitepiecerook1']) { copy.moveType = moveType }
                      for (let copy of templates.list['whitepiecerook2']) { copy.moveType = moveType }
                  }
                  localStorage.setItem('moveTypeLocked','1')
                  // console.log(moveType)
              } else if (localStorage.getItem('moveTypeLocked') === '1'){
                  // console.log('Type Locked')
              }
            arguments: {}
            lib: core
        specification: []
        lastmod: 1713923289523
        uid: 9kQmCDF92f2LmF
      - type: behavior
        name: takePieceWhite
        behaviorType: template
        events:
          - eventKey: OnDraw
            code: |-
              if (localStorage.getItem('whichPlayerTurn') === '2') {
                  if (place.occupied(this, this.x, this.y, 'Black')) {
                  let opponentPiece = place.occupied(this, this.x, this.y, 'Black')
                  opponentPiece.kill = true;
              }
              }
            arguments: {}
            lib: core
        specification: []
        lastmod: 1713844307591
        uid: c4FmWf8Gt6C2wM
      - type: behavior
        name: takePieceBlack
        behaviorType: template
        events:
          - eventKey: OnDraw
            code: |-
              if (localStorage.getItem('whichPlayerTurn') === '1') {
                  if (place.occupied(this, this.x, this.y, 'White')) {
                  let opponentPiece = place.occupied(this, this.x, this.y, 'White')
                  opponentPiece.kill = true;
              }
              }
            arguments: {}
            lib: core
        specification: []
        lastmod: 1713911897955
        uid: ktbt9Rt25pGJQp
  - lastmod: 1713673669586
    type: texture
    name: RNGTest
    untill: 0
    grid:
      - 1
      - 1
    axis:
      - 0
      - 0
    marginx: 0
    marginy: 0
    imgWidth: 64
    imgHeight: 64
    width: 64
    height: 64
    offx: 0
    offy: 0
    origname: iT2cRTbMdmfKT74.png
    shape: rect
    left: 0
    right: 64
    top: 0
    bottom: 64
    uid: T2cRTbMdmfKT74
    padding: 1
    isBlank: false
  - type: folder
    uid: 7R3m6Nf9n8bg1q
    colorClass: act
    icon: help-circle
    name: Templates
    lastmod: 1712356327558
    entries:
      - type: folder
        uid: R9N5dHrqtTDDcC
        colorClass: act
        icon: help-circle
        name: UI
        lastmod: 1713301440801
        entries:
          - type: folder
            uid: q5j318W4gj4pG1
            colorClass: act
            icon: help-circle
            name: Pause Menu
            lastmod: 1713301472568
            entries:
              - type: template
                baseClass: AnimatedSprite
                name: buttoniconpause
                depth: 0
                texture: bDM5gQMphr4mTh
                playAnimationOnStart: false
                loopAnimation: true
                animationFPS: 30
                visible: true
                events:
                  - eventKey: OnPointerClick
                    code: |-
                      if (localStorage.getItem('isPaused') === '0') {
                          localStorage.setItem('isPaused','1')
                          rooms.append('pauseMenu')
                      } else  if (localStorage.getItem('isPaused') === '1'){
                          //do nothing
                          console.log('already paused idiot')
                      }
                    arguments: {}
                    lib: core
                extends: {}
                lastmod: 1713302414059
                uid: DKWbh8rzq7dQFP
                behaviors: []
              - type: template
                baseClass: AnimatedSprite
                name: buttoniconplay
                depth: 0
                texture: cbDptw2MwQqbKf
                playAnimationOnStart: false
                loopAnimation: true
                animationFPS: 30
                visible: true
                events:
                  - eventKey: OnStep
                    lib: core
                    code: this.move();
                    arguments: {}
                extends: {}
                lastmod: 1712960273761
                uid: GFPgrct74JmHkj
                behaviors: []
              - type: template
                baseClass: AnimatedSprite
                name: buttonquit
                depth: 0
                texture: NCc8PK3w6PmPdr
                playAnimationOnStart: false
                loopAnimation: true
                animationFPS: 30
                visible: true
                events:
                  - eventKey: OnDraw
                    code: |-
                      if (localStorage.getItem('transitioning') === '1') {
                          localStorage.setItem('isBlackNeeded','0')
                          transition.slideIn(500, 'left')
                          localStorage.setItem('transitioning', '0')
                      }
                    arguments: {}
                    lib: core
                  - eventKey: OnPointerClick
                    code: |-
                      let transitionOut = transition.slideOut(500,'left')
                      // let transitionIn = 
                      transitionOut.then(() => {
                          localStorage.setItem('transitioning', '1')
                          rooms.switch('mainMenu')
                          localStorage.setItem('transitioning','0')
                      })
                    arguments: {}
                    lib: core
                extends: {}
                lastmod: 1712961774526
                uid: QqCMzhHwDW4cBL
                behaviors: []
              - type: template
                baseClass: AnimatedSprite
                name: Buttonresume
                depth: 0
                texture: PBnP1zjQ1NJG97
                playAnimationOnStart: false
                loopAnimation: true
                animationFPS: 30
                visible: true
                events:
                  - eventKey: OnPointerClick
                    code: |-

                      rooms.remove(this.getRoom())
                    arguments: {}
                    lib: core
                  - eventKey: OnDestroy
                    code: 'localStorage.setItem(''isPaused'',''0'')'
                    arguments: {}
                    lib: core
                extends: {}
                lastmod: 1713302441860
                uid: chwhJPnqzwP3hr
                behaviors: []
              - type: template
                baseClass: AnimatedSprite
                name: Buttonoptions
                depth: 0
                texture: NCgKdKH9rkhm4k
                playAnimationOnStart: false
                loopAnimation: true
                animationFPS: 30
                visible: true
                events:
                  - eventKey: OnStep
                    lib: core
                    code: this.move();
                    arguments: {}
                extends: {}
                lastmod: 1713299746400
                uid: 2dcrwq4crRb7QD
                behaviors: []
          - type: folder
            uid: 6Gp71PcmW6dcqk
            colorClass: act
            icon: help-circle
            name: Main Menu
            lastmod: 1713301484680
            entries:
              - type: template
                baseClass: AnimatedSprite
                name: buttonmaincredits
                depth: 0
                texture: 6Ptcd4fMjL8K5Q
                playAnimationOnStart: false
                loopAnimation: true
                animationFPS: 30
                visible: true
                events:
                  - eventKey: OnDraw
                    code: |-
                      if (localStorage.getItem('transitioning') === '1') {
                          localStorage.setItem('isBlackNeeded','0')
                          transition.slideIn(500, 'left')
                          localStorage.setItem('transitioning', '0')
                      }
                    arguments: {}
                    lib: core
                  - eventKey: OnPointerClick
                    code: |-
                      let transitionOut = transition.slideOut(500,'left')

                      localStorage.setItem('lastRoom','mainMenu')

                      transitionOut.then(() => {
                          localStorage.setItem('transitioning', '1')
                          rooms.switch('credits')
                          localStorage.setItem('transitioning','0')
                      })
                    arguments: {}
                    lib: core
                extends: {}
                lastmod: 1713646516951
                uid: 7CQzdkkMW5p6jf
                behaviors: []
              - type: template
                baseClass: AnimatedSprite
                name: buttonsoptions
                depth: 0
                texture: wQhQ1TrMR72F85
                playAnimationOnStart: false
                loopAnimation: true
                animationFPS: 30
                visible: true
                events:
                  - eventKey: OnDraw
                    code: |-
                      if (localStorage.getItem('transitioning') === '1') {
                          localStorage.setItem('isBlackNeeded','0')
                          transition.slideIn(500, 'left')
                          localStorage.setItem('transitioning', '0')
                      }
                    arguments: {}
                    lib: core
                  - eventKey: OnPointerClick
                    code: |-
                      let transitionOut = transition.slideOut(500,'left')

                      let tomfoolery = Math.round(random(99))

                      localStorage.setItem('lastRoom','mainMenu')

                      transitionOut.then(() => {
                          localStorage.setItem('transitioning', '1')
                          if (desktop.isDesktop === true) {
                              rooms.switch('options')
                              localStorage.setItem('transitioning','0')
                          } else if (desktop.isDesktop === false){
                              if (tomfoolery <= 97 && tomfoolery >= 0) {
                                  rooms.switch('options')
                                  localStorage.setItem('transitioning','0')
                              }
                              else if (tomfoolery === 98) {
                                  cutscene.show('https://www.youtube.com/watch?v=xvFZjo5PgG0')
                              } else if (tomfoolery === 99) {
                                  cutscene.show('https://www.youtube.com/watch?v=mEi4292jSmo')
                          }
                      }
                      })
                    arguments: {}
                    lib: core
                extends: {}
                lastmod: 1713824192410
                uid: R6W2BMhH7DtHhP
                behaviors: []
              - type: template
                baseClass: AnimatedSprite
                name: logo
                depth: 0
                texture: K3jhgP7tWb3WtQ
                playAnimationOnStart: false
                loopAnimation: true
                animationFPS: 30
                visible: true
                events:
                  - eventKey: OnCreate
                    code: |+
                      localStorage.setItem('transitioning','1')
                      localStorage.setItem('isPaused','0')

                    arguments: {}
                    lib: core
                  - eventKey: OnDraw
                    code: '// localStorage.setItem(''transitioning'',''0'')'
                    arguments: {}
                    lib: core
                extends: {}
                lastmod: 1713301276972
                uid: gKc33BgtFBBqc7
                behaviors: []
              - type: template
                baseClass: AnimatedSprite
                name: startButton
                depth: 0
                texture: 1ttRptHrF3RPcD
                playAnimationOnStart: false
                loopAnimation: true
                animationFPS: 30
                visible: true
                events:
                  - eventKey: OnDraw
                    code: |-
                      if (localStorage.getItem('transitioning') === '1') {
                          localStorage.setItem('isBlackNeeded','0')
                          transition.slideIn(500, 'left')
                          localStorage.setItem('transitioning', '0')
                      }
                    arguments: {}
                    lib: core
                  - eventKey: OnPointerClick
                    code: |-
                      let transitionOut = transition.slideOut(500,'left')

                      localStorage.setItem('lastRoom','mainMenu')

                      transitionOut.then(() => {
                          localStorage.setItem('transitioning', '1')
                          rooms.switch('difficultySelect')
                          localStorage.setItem('transitioning','0')
                      })
                    arguments: {}
                    lib: core
                extends: {}
                lastmod: 1713653970322
                uid: 5Ct5mrz791BLcW
                behaviors: []
              - type: template
                baseClass: AnimatedSprite
                name: buttonsexit
                depth: 0
                texture: nKKJG5TWpzMNK1
                playAnimationOnStart: false
                loopAnimation: true
                animationFPS: 30
                visible: true
                events:
                  - eventKey: OnPointerClick
                    code: |-
                      if (desktop.isDesktop === true) {
                          desktop.quit
                      } else if (desktop.isDesktop === false) {
                        let transitionOut =  transition.slideOut(500,'left')
                        transitionOut.then(() => {
                          localStorage.setItem('transitioning', '1')
                          cutscene.show('https://www.youtube.com/watch?v=izPA2EgNS1U')
                          localStorage.setItem('transitioning','0')
                          
                          })
                         
                      }
                    arguments: {}
                    lib: core
                extends: {}
                lastmod: 1713824338394
                uid: Dp4jT3JNfNLjmF
                behaviors: []
                tilingSettings:
                  scrollSpeedX: 0
                  scrollSpeedY: 0
                  isUi: false
          - type: template
            baseClass: AnimatedSprite
            name: blackScreen
            depth: 0
            texture: P6gcthTW1KPpb8
            playAnimationOnStart: false
            loopAnimation: true
            animationFPS: 30
            visible: true
            events:
              - eventKey: OnStep
                lib: core
                code: |
                  if (localStorage.getItem('isBlackNeeded') === '0') {
                      this.x = -1280
                      localStorage.setItem('isBlackNeeded', '1')
                  } 
                arguments: {}
              - eventKey: OnCreate
                code: |+

                arguments: {}
                lib: core
            extends: {}
            lastmod: 1712789216108
            uid: kzgrhWD99djDgj
            behaviors: []
          - type: template
            baseClass: AnimatedSprite
            name: Creators
            depth: 0
            texture: Jh5bHCRC2LGqHR
            playAnimationOnStart: false
            loopAnimation: true
            animationFPS: 30
            visible: true
            events:
              - eventKey: OnDraw
                code: |-
                  if (localStorage.getItem('transitioning') === '1') {
                      localStorage.setItem('isBlackNeeded','0')
                      transition.slideIn(500, 'left')
                      localStorage.setItem('transitioning', '0')
                  }
                arguments: {}
                lib: core
              - eventKey: OnCreate
                code: 'localStorage.setItem(''transitioning'', ''1'')'
                arguments: {}
                lib: core
            extends: {}
            lastmod: 1713647050196
            uid: kj6KqCzb194pBJ
            behaviors: []
          - type: folder
            uid: B6JTn4p7Dq4gCN
            colorClass: act
            icon: help-circle
            name: Difficulty Select
            lastmod: 1713301678968
            entries:
              - type: template
                baseClass: AnimatedSprite
                name: buttondiffcultlylock
                depth: 0
                texture: WMngdbmMCkrKrL
                playAnimationOnStart: false
                loopAnimation: true
                animationFPS: 30
                visible: true
                events:
                  - eventKey: OnStep
                    lib: core
                    code: this.move();
                    arguments: {}
                extends: {}
                lastmod: 1712871907843
                uid: BwM98jDjjTrhQB
                behaviors: []
              - type: template
                baseClass: AnimatedSprite
                name: buttoniconlock
                depth: 0
                texture: t63BjJFjHnNtmB
                playAnimationOnStart: false
                loopAnimation: true
                animationFPS: 30
                visible: true
                events:
                  - eventKey: OnStep
                    lib: core
                    code: this.move();
                    arguments: {}
                extends: {}
                lastmod: 1712960271275
                uid: mHNBFkM2wRPTtP
                behaviors: []
              - type: template
                baseClass: AnimatedSprite
                name: buttonRandomDifficulty
                depth: 0
                texture: JQhj9rwjqMKftf
                playAnimationOnStart: false
                loopAnimation: true
                animationFPS: 30
                visible: true
                events:
                  - eventKey: OnCreate
                    code: 'localStorage.setItem(''transitioning'', ''1'')'
                    arguments: {}
                    lib: core
                extends: {}
                lastmod: 1713301380514
                uid: kbMRckzc3HhmR5
                behaviors: []
              - type: template
                baseClass: AnimatedSprite
                name: Difficulty
                depth: 0
                texture: 663dbcMqt1LQGM
                playAnimationOnStart: false
                loopAnimation: true
                animationFPS: 30
                visible: true
                events:
                  - eventKey: OnStep
                    lib: core
                    code: this.move();
                    arguments: {}
                extends: {}
                lastmod: 1713299812170
                uid: Ftwkrj6BH92Kgq
                behaviors: []
              - type: template
                baseClass: AnimatedSprite
                name: Buttonstart
                depth: 0
                texture: Ctj1NqgzKRJMbr
                playAnimationOnStart: false
                loopAnimation: true
                animationFPS: 30
                visible: true
                events:
                  - eventKey: OnPointerClick
                    code: |
                      let transitionOut = transition.slideOut(500,'left')

                      // let transitionIn = 
                      transitionOut.then(() => {
                          localStorage.setItem('transitioning', '1')
                          rooms.switch('gameplay')
                      })
                    arguments: {}
                    lib: core
                  - eventKey: OnDraw
                    code: |-
                      if (localStorage.getItem('transitioning') === '1') {
                          localStorage.setItem('isBlackNeeded','0')
                          transition.slideIn(500, 'left')
                          localStorage.setItem('transitioning', '0')
                      }
                    arguments: {}
                    lib: core
                extends: {}
                lastmod: 1713302011267
                uid: P6MbcPzkr5Pm9f
                behaviors: []
          - type: template
            baseClass: AnimatedSprite
            name: optionsNotFound
            depth: 0
            texture: hnkktb5LKDKn48
            playAnimationOnStart: false
            loopAnimation: true
            animationFPS: 30
            visible: true
            events:
              - eventKey: OnDraw
                code: |-
                  if (localStorage.getItem('transitioning') === '1') {
                      localStorage.setItem('isBlackNeeded','0')
                      transition.slideIn(500, 'left')
                      localStorage.setItem('transitioning', '0')
                  }
                arguments: {}
                lib: core
              - eventKey: OnCreate
                code: 'localStorage.setItem(''transitioning'', ''1'')'
                arguments: {}
                lib: core
            extends: {}
            lastmod: 1713647045877
            uid: fJ1242NJm2Gnrw
            behaviors: []
          - type: template
            baseClass: AnimatedSprite
            name: buttonIconBack
            depth: 0
            texture: jkL3k74KfwqzRm
            playAnimationOnStart: false
            loopAnimation: true
            animationFPS: 30
            visible: true
            events:
              - eventKey: OnPointerClick
                code: |-
                  let transitionOut = transition.slideOut(500,'left')



                  transitionOut.then(() => {
                      localStorage.setItem('transitioning', '1')
                      rooms.switch(localStorage.getItem('lastRoom'))
                      localStorage.setItem('transitioning','0')
                  })
                arguments: {}
                lib: core
            extends: {}
            lastmod: 1713646888783
            uid: kM7KtL3WdrCCqm
            behaviors: []
          - type: folder
            uid: Nhkwk7QwnbMQ9r
            colorClass: act
            icon: help-circle
            name: Turn Indicator
            lastmod: 1713902891737
            entries:
              - type: template
                baseClass: AnimatedSprite
                name: Player1Turn
                depth: 0
                texture: 5fnhPWrdTC7GD5
                playAnimationOnStart: false
                loopAnimation: true
                animationFPS: 30
                visible: true
                events:
                  - eventKey: OnStep
                    lib: core
                    code: |-
                      if (localStorage.getItem('whichPlayerTurn') === '2') {
                          this.visible = false;
                      }
                      if (localStorage.getItem('whichPlayerTurn') === '1') {
                          this.visible = true;
                      }
                    arguments: {}
                extends: {}
                lastmod: 1713903058084
                uid: QcPdRCgwq97KnD
                behaviors: []
              - type: template
                baseClass: AnimatedSprite
                name: Player2Turn
                depth: 0
                texture: pJpJCFkDfQhf9w
                playAnimationOnStart: false
                loopAnimation: true
                animationFPS: 30
                visible: true
                events:
                  - eventKey: OnStep
                    lib: core
                    code: |-
                      if (localStorage.getItem('whichPlayerTurn') === '1') {
                          this.visible = false;
                      }

                      if (localStorage.getItem('whichPlayerTurn') === '2') {
                          this.visible = true;
                      }
                    arguments: {}
                extends: {}
                lastmod: 1713903046445
                uid: JtGzFC5tqt2HHF
                behaviors: []
          - type: folder
            uid: Jg3J7Pzf4KfJ6n
            colorClass: act
            icon: help-circle
            name: Win Screen
            lastmod: 1713902903537
            entries:
              - type: template
                baseClass: AnimatedSprite
                name: BlackWins
                depth: 0
                texture: 8mrDbH4PfR7cnB
                playAnimationOnStart: false
                loopAnimation: true
                animationFPS: 30
                visible: true
                events:
                  - eventKey: OnStep
                    lib: core
                    code: >-
                      if (localStorage.getItem('winnerWinnerChickenDinner') ===
                      'Black') {
                          this.visible = true;
                      }


                      if (localStorage.getItem('winnerWinnerChickenDinner') ===
                      'White') {
                          this.visible = false;
                      }
                    arguments: {}
                extends: {}
                lastmod: 1713903372829
                uid: JQWPJdTLbJknm1
                behaviors: []
              - type: template
                baseClass: AnimatedSprite
                name: WhiteWins
                depth: 0
                texture: nNtQLbDBfQCKdp
                playAnimationOnStart: false
                loopAnimation: true
                animationFPS: 30
                visible: true
                events:
                  - eventKey: OnStep
                    lib: core
                    code: >-
                      if (localStorage.getItem('winnerWinnerChickenDinner') ===
                      'White') {
                          this.visible = true;
                      }


                      if (localStorage.getItem('winnerWinnerChickenDinner') ===
                      'Black') {
                          this.visible = false;
                      }
                    arguments: {}
                extends: {}
                lastmod: 1713903381864
                uid: HcgDQQKnPzLRLm
                behaviors: []
      - type: folder
        uid: JJFBqHkwNT8PgQ
        colorClass: act
        icon: help-circle
        name: Gameplay
        lastmod: 1713301620601
        entries:
          - type: template
            baseClass: AnimatedSprite
            name: chessboard
            depth: 0
            texture: Tg8GhRzKzGg2c9
            playAnimationOnStart: false
            loopAnimation: true
            animationFPS: 30
            visible: true
            events:
              - eventKey: OnDraw
                code: |+
                  if (localStorage.getItem('transitioning') === '1') {
                      localStorage.setItem('isBlackNeeded','0')
                      transition.slideIn(500, 'left')
                      localStorage.setItem('transitioning', '0')
                  }


                arguments: {}
                lib: core
              - eventKey: OnCreate
                code: 'localStorage.setItem(''transitioning'',''1'')'
                arguments: {}
                lib: core
            extends: {}
            lastmod: 1713821818195
            uid: 4Gqfg1jrm89kpd
            behaviors:
              - 9kQmCDF92f2LmF
          - type: template
            baseClass: AnimatedSprite
            name: tileHighlight
            depth: 0
            texture: W18rKh6wmJzt8B
            playAnimationOnStart: false
            loopAnimation: true
            animationFPS: 30
            visible: true
            events:
              - eventKey: OnPointerClick
                code: |-
                  var mvX = this.x

                  var mvY = this.y

                  localStorage.setItem('moveToX', mvX.toString())
                  localStorage.setItem('moveToY', mvY.toString())

                  localStorage.setItem('timeToMove','1')
                  localStorage.setItem('moveTypeLocked','0')

                  if (localStorage.getItem('whichPlayerTurn') === '1'){
                      localStorage.setItem('whichPlayerTurn','2')
                  } else if (localStorage.getItem('whichPlayerTurn') === '2'){
                      localStorage.setItem('whichPlayerTurn','1')
                  }

                  for (let highlight of templates.list['tileHighlight']) {
                          highlight.kill = true;
                  }

                  this.kill = true
                arguments: {}
                lib: core
              - eventKey: OnCreate
                code: >-
                  if (localStorage.getItem('whichPlayerTurn') === '1') {
                      if (place.occupied(this, this.x, this.y, 'White')) {
                      this.kill = true;
                      }
                  } else if (localStorage.getItem('whichPlayerTurn') === '2') {
                      if (place.occupied(this, this.x, this.y, 'Black')) {
                      this.kill = true;
                  }

                  }


                  if (this.x < 415-16 || this.x > 863+16 || this.y < 137-16 ||
                  this.y > 585+16) {
                      this.kill = true;
                  }
                arguments: {}
                lib: core
            extends: {}
            lastmod: 1713920775418
            uid: LW4nkB3525ndtH
            behaviors: []
          - type: folder
            uid: 39jQJRC8nWDkPF
            colorClass: act
            icon: help-circle
            name: piecesBlack
            lastmod: 1713649278791
            entries:
              - type: template
                baseClass: AnimatedSprite
                name: blackpieceknight1
                depth: 0
                texture: NJnBR7dp7CL1dd
                playAnimationOnStart: false
                loopAnimation: true
                animationFPS: 30
                visible: true
                events:
                  - eventKey: OnPointerClick
                    code: |
                      if (localStorage.getItem('whichPlayerTurn') === '2') { 
                          localStorage.setItem('pieceID', 'bpkn1')
                           
                          for (let highlight of templates.list['tileHighlight']) {
                                  highlight.kill = true;
                          }
                      }

                       else if (localStorage.getItem('whichPlayerTurn') === '1') {
                          console.log('it aint your turn fool')
                          return;
                      }
                    arguments: {}
                    lib: core
                  - eventKey: OnDraw
                    code: >-
                      if (localStorage.getItem('timeToMove') === '1' &&
                      localStorage.getItem('pieceID') === 'bpkn1') {
                          let mvY = localStorage.getItem('moveToY')
                          let mvX = localStorage.getItem('moveToX')
                          this.y = Number(mvY)
                          this.x = Number(mvX)
                          
                          this.madeMove = true;
                          localStorage.setItem('timeToMove','0')
                      }
                    arguments: {}
                    lib: core
                  - eventKey: OnCreate
                    code: this.moveType = this.moveType ?? 1;
                    arguments: {}
                    lib: core
                extends:
                  cgroup: Black
                lastmod: 1713921371318
                uid: fc9KqcQ9Tpd6CT
                behaviors:
                  - zn6CnBrBLc1BFh
                  - RgCwFJQzzJj2J5
                  - kJ4Gb1G34pgkt8
                  - 7tqF4N6kwND23N
                  - fGRmt3c7QthKzm
                  - NzG5gtKM76Ldg8
                  - ktbt9Rt25pGJQp
              - type: template
                baseClass: AnimatedSprite
                name: blackpiecequeen
                depth: 0
                texture: dzzp47n9q1K8Tj
                playAnimationOnStart: false
                loopAnimation: true
                animationFPS: 30
                visible: true
                events:
                  - eventKey: OnPointerClick
                    code: |
                      if (localStorage.getItem('whichPlayerTurn') === '2') { 
                          localStorage.setItem('pieceID', 'bpq')
                          
                          for (let highlight of templates.list['tileHighlight']) {
                                  highlight.kill = true;
                          }
                      }

                       else if (localStorage.getItem('whichPlayerTurn') === '1') {
                          console.log('it aint your turn fool')
                          return;
                      }
                    arguments: {}
                    lib: core
                  - eventKey: OnDraw
                    code: >-
                      if (localStorage.getItem('timeToMove') === '1' &&
                      localStorage.getItem('pieceID') === 'bpq') {
                          let mvY = localStorage.getItem('moveToY')
                          let mvX = localStorage.getItem('moveToX')
                          this.y = Number(mvY)
                          this.x = Number(mvX)
                          
                          this.madeMove = true;
                          localStorage.setItem('timeToMove','0')
                      }
                    arguments: {}
                    lib: core
                  - eventKey: OnCreate
                    code: this.moveType = this.moveType ?? 4;
                    arguments: {}
                    lib: core
                extends:
                  cgroup: Black
                lastmod: 1713921531147
                uid: gfwnqcmj7qr3W7
                behaviors:
                  - zn6CnBrBLc1BFh
                  - kJ4Gb1G34pgkt8
                  - RgCwFJQzzJj2J5
                  - fGRmt3c7QthKzm
                  - 7tqF4N6kwND23N
                  - NzG5gtKM76Ldg8
                  - ktbt9Rt25pGJQp
              - type: template
                baseClass: AnimatedSprite
                name: blackpiecepawn1
                depth: 0
                texture: qFqjpg1Rz5wzG1
                playAnimationOnStart: false
                loopAnimation: true
                animationFPS: 30
                visible: true
                events:
                  - eventKey: OnPointerClick
                    code: |
                      if (localStorage.getItem('whichPlayerTurn') === '2') { 
                          localStorage.setItem('pieceID', 'bpp1')
                          
                          for (let highlight of templates.list['tileHighlight']) {
                                  highlight.kill = true;
                          }
                      }

                       else if (localStorage.getItem('whichPlayerTurn') === '1') {
                          console.log('it aint your turn fool')
                          return;
                      }
                    arguments: {}
                    lib: core
                  - eventKey: OnDraw
                    code: >-
                      if (localStorage.getItem('timeToMove') === '1' &&
                      localStorage.getItem('pieceID') === 'bpp1') {
                          let mvY = localStorage.getItem('moveToY')
                          let mvX = localStorage.getItem('moveToX')
                          this.y = Number(mvY)
                          this.x = Number(mvX)
                          
                          this.madeMove = true;
                          localStorage.setItem('timeToMove','0')
                      }
                    arguments: {}
                    lib: core
                  - eventKey: OnCreate
                    code: this.moveType = this.moveType ?? 0;
                    arguments: {}
                    lib: core
                extends:
                  cgroup: Black
                lastmod: 1713921473235
                uid: h1KgqHTcKTcdCQ
                behaviors:
                  - zn6CnBrBLc1BFh
                  - RgCwFJQzzJj2J5
                  - kJ4Gb1G34pgkt8
                  - 7tqF4N6kwND23N
                  - fGRmt3c7QthKzm
                  - NzG5gtKM76Ldg8
                  - ktbt9Rt25pGJQp
              - type: template
                baseClass: AnimatedSprite
                name: blackpiecerook1
                depth: 0
                texture: hk23tkhRL3dK2f
                playAnimationOnStart: false
                loopAnimation: true
                animationFPS: 30
                visible: true
                events:
                  - eventKey: OnPointerClick
                    code: |
                      if (localStorage.getItem('whichPlayerTurn') === '2') { 
                          localStorage.setItem('pieceID', 'bpr1')
                          for (let highlight of templates.list['tileHighlight']) {
                                  highlight.kill = true;
                          }
                      }

                       else if (localStorage.getItem('whichPlayerTurn') === '1') {
                          console.log('it aint your turn fool')
                          return;
                      }
                    arguments: {}
                    lib: core
                  - eventKey: OnDraw
                    code: >-
                      if (localStorage.getItem('timeToMove') === '1' &&
                      localStorage.getItem('pieceID') === 'bpr1') {
                          let mvY = localStorage.getItem('moveToY')
                          let mvX = localStorage.getItem('moveToX')
                          this.y = Number(mvY)
                          this.x = Number(mvX)
                          
                          this.madeMove = true;
                          localStorage.setItem('timeToMove','0')
                      }
                    arguments: {}
                    lib: core
                  - eventKey: OnCreate
                    code: this.moveType = this.moveType ?? 2;
                    arguments: {}
                    lib: core
                extends:
                  cgroup: Black
                lastmod: 1713923719781
                uid: 34tHBwnK2JD9G3
                behaviors:
                  - zn6CnBrBLc1BFh
                  - RgCwFJQzzJj2J5
                  - kJ4Gb1G34pgkt8
                  - 7tqF4N6kwND23N
                  - fGRmt3c7QthKzm
                  - NzG5gtKM76Ldg8
                  - ktbt9Rt25pGJQp
              - type: template
                baseClass: AnimatedSprite
                name: blackpiecebishop1
                depth: 0
                texture: HfDCmH63QLk6c1
                playAnimationOnStart: false
                loopAnimation: true
                animationFPS: 30
                visible: true
                events:
                  - eventKey: OnPointerClick
                    code: |
                      if (localStorage.getItem('whichPlayerTurn') === '2') { 
                          localStorage.setItem('pieceID', 'bpb1')
                          
                          for (let highlight of templates.list['tileHighlight']) {
                                  highlight.kill = true;
                          }
                      }

                       else if (localStorage.getItem('whichPlayerTurn') === '1') {
                          console.log('it aint your turn fool')
                          return;
                      }
                    arguments: {}
                    lib: core
                  - eventKey: OnDraw
                    code: >-
                      if (localStorage.getItem('timeToMove') === '1' &&
                      localStorage.getItem('pieceID') === 'bpb1') {
                          let mvY = localStorage.getItem('moveToY')
                          let mvX = localStorage.getItem('moveToX')
                          this.y = Number(mvY)
                          this.x = Number(mvX)
                          
                          this.madeMove = true;
                          localStorage.setItem('timeToMove','0')
                      }
                    arguments: {}
                    lib: core
                  - eventKey: OnCreate
                    code: this.moveType = this.moveType ?? 3;
                    arguments: {}
                    lib: core
                extends:
                  cgroup: Black
                lastmod: 1713921354947
                uid: fQqRH69jNHkNhJ
                behaviors:
                  - zn6CnBrBLc1BFh
                  - RgCwFJQzzJj2J5
                  - kJ4Gb1G34pgkt8
                  - 7tqF4N6kwND23N
                  - fGRmt3c7QthKzm
                  - NzG5gtKM76Ldg8
                  - ktbt9Rt25pGJQp
              - type: template
                baseClass: AnimatedSprite
                name: blackpieceking
                depth: 0
                texture: MHRHHJ8jcWbJwG
                playAnimationOnStart: false
                loopAnimation: true
                animationFPS: 30
                visible: true
                events:
                  - eventKey: OnPointerClick
                    code: |
                      if (localStorage.getItem('whichPlayerTurn') === '2') { 
                          localStorage.setItem('pieceID', 'bpk')
                           
                          for (let highlight of templates.list['tileHighlight']) {
                                  highlight.kill = true;
                          }
                      }

                       else if (localStorage.getItem('whichPlayerTurn') === '1') {
                          console.log('it aint your turn fool')
                          return;
                      }
                    arguments: {}
                    lib: core
                  - eventKey: OnDraw
                    code: >-
                      if (localStorage.getItem('timeToMove') === '1' &&
                      localStorage.getItem('pieceID') === 'bpk') {
                          let mvY = localStorage.getItem('moveToY')
                          let mvX = localStorage.getItem('moveToX')
                          this.y = Number(mvY)
                          this.x = Number(mvX)
                          
                          this.madeMove = true;
                          localStorage.setItem('timeToMove','0')
                      }


                      if (this.kill === true) {
                          localStorage.setItem('winnerWinnerChickenDinner','White')
                          rooms.switch('winScreen')
                      }
                    arguments: {}
                    lib: core
                  - eventKey: OnDestroy
                    code: |-
                      localStorage.setItem('winnerWinnerChickenDinner','White')


                      let transitionOut = transition.slideOut(500,'left')


                      transitionOut.then(() => {
                          localStorage.setItem('transitioning', '1')
                          rooms.switch('winScreen');
                          localStorage.setItem('transitioning','0')
                      })
                    arguments: {}
                    lib: core
                  - eventKey: OnCreate
                    code: this.moveType = this.moveType ?? 5;
                    arguments: {}
                    lib: core
                extends:
                  cgroup: Black
                lastmod: 1713921365081
                uid: Q8rKpCqqHb8bBT
                behaviors:
                  - zn6CnBrBLc1BFh
                  - RgCwFJQzzJj2J5
                  - kJ4Gb1G34pgkt8
                  - 7tqF4N6kwND23N
                  - fGRmt3c7QthKzm
                  - NzG5gtKM76Ldg8
                  - ktbt9Rt25pGJQp
              - type: template
                baseClass: AnimatedSprite
                name: blackpiecebishop2
                depth: 0
                texture: HfDCmH63QLk6c1
                playAnimationOnStart: false
                loopAnimation: true
                animationFPS: 30
                visible: true
                events:
                  - eventKey: OnPointerClick
                    code: |
                      if (localStorage.getItem('whichPlayerTurn') === '2') { 
                          localStorage.setItem('pieceID', 'bpb2')
                           
                          for (let highlight of templates.list['tileHighlight']) {
                                  highlight.kill = true;
                          }
                      }

                       else if (localStorage.getItem('whichPlayerTurn') === '1') {
                          console.log('it aint your turn fool')
                          return;
                      }
                    arguments: {}
                    lib: core
                  - eventKey: OnDraw
                    code: >-
                      if (localStorage.getItem('timeToMove') === '1' &&
                      localStorage.getItem('pieceID') === 'bpb2') {
                          let mvY = localStorage.getItem('moveToY')
                          let mvX = localStorage.getItem('moveToX')
                          this.y = Number(mvY)
                          this.x = Number(mvX)
                          
                          this.madeMove = true;
                          localStorage.setItem('timeToMove','0')
                      }
                    arguments: {}
                    lib: core
                  - eventKey: OnCreate
                    code: this.moveType = this.moveType ?? 3;
                    arguments: {}
                    lib: core
                extends:
                  cgroup: Black
                lastmod: 1713921360853
                uid: tb8z2np1JRqQ5R
                behaviors:
                  - zn6CnBrBLc1BFh
                  - RgCwFJQzzJj2J5
                  - kJ4Gb1G34pgkt8
                  - 7tqF4N6kwND23N
                  - fGRmt3c7QthKzm
                  - NzG5gtKM76Ldg8
                  - ktbt9Rt25pGJQp
              - type: template
                baseClass: AnimatedSprite
                name: blackpieceknight2
                depth: 0
                texture: NJnBR7dp7CL1dd
                playAnimationOnStart: false
                loopAnimation: true
                animationFPS: 30
                visible: true
                events:
                  - eventKey: OnPointerClick
                    code: |
                      if (localStorage.getItem('whichPlayerTurn') === '2') { 
                          localStorage.setItem('pieceID', 'bpkn2')
                       
                          for (let highlight of templates.list['tileHighlight']) {
                                  highlight.kill = true;
                          }
                      }

                       else if (localStorage.getItem('whichPlayerTurn') === '1') {
                          console.log('it aint your turn fool')
                          return;
                      }
                    arguments: {}
                    lib: core
                  - eventKey: OnDraw
                    code: >-
                      if (localStorage.getItem('timeToMove') === '1' &&
                      localStorage.getItem('pieceID') === 'bpkn2') {
                          let mvY = localStorage.getItem('moveToY')
                          let mvX = localStorage.getItem('moveToX')
                          this.y = Number(mvY)
                          this.x = Number(mvX)
                          
                          this.madeMove = true;
                          localStorage.setItem('timeToMove','0')
                      }
                    arguments: {}
                    lib: core
                  - eventKey: OnCreate
                    code: this.moveType = this.moveType ?? 1;
                    arguments: {}
                    lib: core
                extends:
                  cgroup: Black
                lastmod: 1713921467503
                uid: fRPP2qMjHP5G36
                behaviors:
                  - zn6CnBrBLc1BFh
                  - RgCwFJQzzJj2J5
                  - kJ4Gb1G34pgkt8
                  - 7tqF4N6kwND23N
                  - fGRmt3c7QthKzm
                  - NzG5gtKM76Ldg8
                  - ktbt9Rt25pGJQp
              - type: template
                baseClass: AnimatedSprite
                name: blackpiecerook2
                depth: 0
                texture: hk23tkhRL3dK2f
                playAnimationOnStart: false
                loopAnimation: true
                animationFPS: 30
                visible: true
                events:
                  - eventKey: OnPointerClick
                    code: |
                      if (localStorage.getItem('whichPlayerTurn') === '2') { 
                          localStorage.setItem('pieceID', 'bpr2')
                          for (let highlight of templates.list['tileHighlight']) {
                                  highlight.kill = true;
                          }
                      }

                       else if (localStorage.getItem('whichPlayerTurn') === '1') {
                          console.log('it aint your turn fool')
                          return;
                      }
                    arguments: {}
                    lib: core
                  - eventKey: OnDraw
                    code: >-
                      if (localStorage.getItem('timeToMove') === '1' &&
                      localStorage.getItem('pieceID') === 'bpr2') {
                          let mvY = localStorage.getItem('moveToY')
                          let mvX = localStorage.getItem('moveToX')
                          this.y = Number(mvY)
                          this.x = Number(mvX)
                          
                          this.madeMove = true;
                          localStorage.setItem('timeToMove','0')
                      }
                    arguments: {}
                    lib: core
                  - eventKey: OnCreate
                    code: this.moveType = this.moveType ?? 2;
                    arguments: {}
                    lib: core
                extends:
                  cgroup: Black
                lastmod: 1713923713994
                uid: 6Qj7nM9B5TR8fb
                behaviors:
                  - zn6CnBrBLc1BFh
                  - RgCwFJQzzJj2J5
                  - kJ4Gb1G34pgkt8
                  - 7tqF4N6kwND23N
                  - fGRmt3c7QthKzm
                  - NzG5gtKM76Ldg8
                  - ktbt9Rt25pGJQp
              - type: template
                baseClass: AnimatedSprite
                name: blackpiecepawn2
                depth: 0
                texture: qFqjpg1Rz5wzG1
                playAnimationOnStart: false
                loopAnimation: true
                animationFPS: 30
                visible: true
                events:
                  - eventKey: OnPointerClick
                    code: |
                      if (localStorage.getItem('whichPlayerTurn') === '2') { 
                          localStorage.setItem('pieceID', 'bpp2')
                           
                          for (let highlight of templates.list['tileHighlight']) {
                                  highlight.kill = true;
                          }
                      }

                       else if (localStorage.getItem('whichPlayerTurn') === '1') {
                          console.log('it aint your turn fool')
                          return;
                      }
                    arguments: {}
                    lib: core
                  - eventKey: OnDraw
                    code: >-
                      if (localStorage.getItem('timeToMove') === '1' &&
                      localStorage.getItem('pieceID') === 'bpp2') {
                          let mvY = localStorage.getItem('moveToY')
                          let mvX = localStorage.getItem('moveToX')
                          this.y = Number(mvY)
                          this.x = Number(mvX)
                          
                          this.madeMove = true;
                          localStorage.setItem('timeToMove','0')
                      }
                    arguments: {}
                    lib: core
                  - eventKey: OnCreate
                    code: this.moveType = this.moveType ?? 0;
                    arguments: {}
                    lib: core
                extends:
                  cgroup: Black
                lastmod: 1713921477753
                uid: pCCFf6346MQNFK
                behaviors:
                  - zn6CnBrBLc1BFh
                  - RgCwFJQzzJj2J5
                  - kJ4Gb1G34pgkt8
                  - 7tqF4N6kwND23N
                  - fGRmt3c7QthKzm
                  - NzG5gtKM76Ldg8
                  - ktbt9Rt25pGJQp
              - type: template
                baseClass: AnimatedSprite
                name: blackpiecepawn3
                depth: 0
                texture: qFqjpg1Rz5wzG1
                playAnimationOnStart: false
                loopAnimation: true
                animationFPS: 30
                visible: true
                events:
                  - eventKey: OnPointerClick
                    code: |
                      if (localStorage.getItem('whichPlayerTurn') === '2') { 
                          localStorage.setItem('pieceID', 'bpp3')
                          
                          for (let highlight of templates.list['tileHighlight']) {
                                  highlight.kill = true;
                          }
                      }

                       else if (localStorage.getItem('whichPlayerTurn') === '1') {
                          console.log('it aint your turn fool')
                          return;
                      }
                    arguments: {}
                    lib: core
                  - eventKey: OnDraw
                    code: >-
                      if (localStorage.getItem('timeToMove') === '1' &&
                      localStorage.getItem('pieceID') === 'bpp3') {
                          let mvY = localStorage.getItem('moveToY')
                          let mvX = localStorage.getItem('moveToX')
                          this.y = Number(mvY)
                          this.x = Number(mvX)
                          
                          this.madeMove = true;
                          localStorage.setItem('timeToMove','0')
                      }
                    arguments: {}
                    lib: core
                  - eventKey: OnCreate
                    code: this.moveType = this.moveType ?? 0;
                    arguments: {}
                    lib: core
                extends:
                  cgroup: Black
                lastmod: 1713921482109
                uid: PzJbpppGJhDRDz
                behaviors:
                  - zn6CnBrBLc1BFh
                  - RgCwFJQzzJj2J5
                  - 7tqF4N6kwND23N
                  - kJ4Gb1G34pgkt8
                  - fGRmt3c7QthKzm
                  - NzG5gtKM76Ldg8
                  - ktbt9Rt25pGJQp
              - type: template
                baseClass: AnimatedSprite
                name: blackpiecepawn4
                depth: 0
                texture: qFqjpg1Rz5wzG1
                playAnimationOnStart: false
                loopAnimation: true
                animationFPS: 30
                visible: true
                events:
                  - eventKey: OnPointerClick
                    code: |
                      if (localStorage.getItem('whichPlayerTurn') === '2') { 
                          localStorage.setItem('pieceID', 'bpp4')
                           
                          for (let highlight of templates.list['tileHighlight']) {
                                  highlight.kill = true;
                          }
                      }

                       else if (localStorage.getItem('whichPlayerTurn') === '1') {
                          console.log('it aint your turn fool')
                          return;
                      }
                    arguments: {}
                    lib: core
                  - eventKey: OnDraw
                    code: >-
                      if (localStorage.getItem('timeToMove') === '1' &&
                      localStorage.getItem('pieceID') === 'bpp4') {
                          let mvY = localStorage.getItem('moveToY')
                          let mvX = localStorage.getItem('moveToX')
                          this.y = Number(mvY)
                          this.x = Number(mvX)
                          
                          this.madeMove = true;
                          localStorage.setItem('timeToMove','0')
                      }
                    arguments: {}
                    lib: core
                  - eventKey: OnCreate
                    code: this.moveType = this.moveType ?? 0;
                    arguments: {}
                    lib: core
                extends:
                  cgroup: Black
                lastmod: 1713921491556
                uid: THfbFcmLGHtQJm
                behaviors:
                  - zn6CnBrBLc1BFh
                  - RgCwFJQzzJj2J5
                  - kJ4Gb1G34pgkt8
                  - 7tqF4N6kwND23N
                  - fGRmt3c7QthKzm
                  - NzG5gtKM76Ldg8
                  - ktbt9Rt25pGJQp
              - type: template
                baseClass: AnimatedSprite
                name: blackpiecepawn5
                depth: 0
                texture: qFqjpg1Rz5wzG1
                playAnimationOnStart: false
                loopAnimation: true
                animationFPS: 30
                visible: true
                events:
                  - eventKey: OnPointerClick
                    code: |
                      if (localStorage.getItem('whichPlayerTurn') === '2') { 
                          localStorage.setItem('pieceID', 'bpp5')
                           
                          for (let highlight of templates.list['tileHighlight']) {
                                  highlight.kill = true;
                          }
                      }

                       else if (localStorage.getItem('whichPlayerTurn') === '1') {
                          console.log('it aint your turn fool')
                          return;
                      }
                    arguments: {}
                    lib: core
                  - eventKey: OnDraw
                    code: >-
                      if (localStorage.getItem('timeToMove') === '1' &&
                      localStorage.getItem('pieceID') === 'bpp5') {
                          let mvY = localStorage.getItem('moveToY')
                          let mvX = localStorage.getItem('moveToX')
                          this.y = Number(mvY)
                          this.x = Number(mvX)
                          
                          this.madeMove = true;
                          localStorage.setItem('timeToMove','0')
                      }
                    arguments: {}
                    lib: core
                  - eventKey: OnCreate
                    code: this.moveType = this.moveType ?? 0;
                    arguments: {}
                    lib: core
                extends:
                  cgroup: Black
                lastmod: 1713921497656
                uid: RR3wKKhfDFJJ22
                behaviors:
                  - zn6CnBrBLc1BFh
                  - RgCwFJQzzJj2J5
                  - kJ4Gb1G34pgkt8
                  - 7tqF4N6kwND23N
                  - fGRmt3c7QthKzm
                  - NzG5gtKM76Ldg8
                  - ktbt9Rt25pGJQp
              - type: template
                baseClass: AnimatedSprite
                name: blackpiecepawn6
                depth: 0
                texture: qFqjpg1Rz5wzG1
                playAnimationOnStart: false
                loopAnimation: true
                animationFPS: 30
                visible: true
                events:
                  - eventKey: OnPointerClick
                    code: |
                      if (localStorage.getItem('whichPlayerTurn') === '2') { 
                          localStorage.setItem('pieceID', 'bpp6')
                           
                          for (let highlight of templates.list['tileHighlight']) {
                                  highlight.kill = true;
                          }
                      }

                       else if (localStorage.getItem('whichPlayerTurn') === '1') {
                          console.log('it aint your turn fool')
                          return;
                      }
                    arguments: {}
                    lib: core
                  - eventKey: OnDraw
                    code: >-
                      if (localStorage.getItem('timeToMove') === '1' &&
                      localStorage.getItem('pieceID') === 'bpp6') {
                          let mvY = localStorage.getItem('moveToY')
                          let mvX = localStorage.getItem('moveToX')
                          this.y = Number(mvY)
                          this.x = Number(mvX)
                          
                          this.madeMove = true;
                          localStorage.setItem('timeToMove','0')
                      }
                    arguments: {}
                    lib: core
                  - eventKey: OnCreate
                    code: this.moveType = this.moveType ?? 0;
                    arguments: {}
                    lib: core
                extends:
                  cgroup: Black
                lastmod: 1713921504990
                uid: hg7wzWngKTddf8
                behaviors:
                  - zn6CnBrBLc1BFh
                  - RgCwFJQzzJj2J5
                  - kJ4Gb1G34pgkt8
                  - 7tqF4N6kwND23N
                  - fGRmt3c7QthKzm
                  - NzG5gtKM76Ldg8
                  - ktbt9Rt25pGJQp
              - type: template
                baseClass: AnimatedSprite
                name: blackpiecepawn7
                depth: 0
                texture: qFqjpg1Rz5wzG1
                playAnimationOnStart: false
                loopAnimation: true
                animationFPS: 30
                visible: true
                events:
                  - eventKey: OnPointerClick
                    code: |
                      if (localStorage.getItem('whichPlayerTurn') === '2') { 
                          localStorage.setItem('pieceID', 'bpp7')
                           
                          for (let highlight of templates.list['tileHighlight']) {
                                  highlight.kill = true;
                          }
                      }

                       else if (localStorage.getItem('whichPlayerTurn') === '1') {
                          console.log('it aint your turn fool')
                          return;
                      }
                    arguments: {}
                    lib: core
                  - eventKey: OnDraw
                    code: >-
                      if (localStorage.getItem('timeToMove') === '1' &&
                      localStorage.getItem('pieceID') === 'bpp7') {
                          let mvY = localStorage.getItem('moveToY')
                          let mvX = localStorage.getItem('moveToX')
                          this.y = Number(mvY)
                          this.x = Number(mvX)
                          
                          this.madeMove = true;
                          localStorage.setItem('timeToMove','0')
                      }
                    arguments: {}
                    lib: core
                  - eventKey: OnCreate
                    code: this.moveType = this.moveType ?? 0;
                    arguments: {}
                    lib: core
                extends:
                  cgroup: Black
                lastmod: 1713921509019
                uid: 8Ht67d31fwdf6B
                behaviors:
                  - zn6CnBrBLc1BFh
                  - RgCwFJQzzJj2J5
                  - kJ4Gb1G34pgkt8
                  - 7tqF4N6kwND23N
                  - NzG5gtKM76Ldg8
                  - fGRmt3c7QthKzm
                  - ktbt9Rt25pGJQp
              - type: template
                baseClass: AnimatedSprite
                name: blackpiecepawn8
                depth: 0
                texture: qFqjpg1Rz5wzG1
                playAnimationOnStart: false
                loopAnimation: true
                animationFPS: 30
                visible: true
                events:
                  - eventKey: OnPointerClick
                    code: |
                      if (localStorage.getItem('whichPlayerTurn') === '2') { 
                          localStorage.setItem('pieceID', 'bpp8')
                          
                          for (let highlight of templates.list['tileHighlight']) {
                                  highlight.kill = true;
                          }
                      }

                       else if (localStorage.getItem('whichPlayerTurn') === '1') {
                          console.log('it aint your turn fool')
                          return;
                      }
                    arguments: {}
                    lib: core
                  - eventKey: OnDraw
                    code: >-
                      if (localStorage.getItem('timeToMove') === '1' &&
                      localStorage.getItem('pieceID') === 'bpp8') {
                          let mvY = localStorage.getItem('moveToY')
                          let mvX = localStorage.getItem('moveToX')
                          this.y = Number(mvY)
                          this.x = Number(mvX)
                          
                          this.madeMove = true;
                          localStorage.setItem('timeToMove','0')
                      }
                    arguments: {}
                    lib: core
                  - eventKey: OnCreate
                    code: this.moveType = this.moveType ?? 0;
                    arguments: {}
                    lib: core
                extends:
                  cgroup: Black
                lastmod: 1713921513015
                uid: h31fgMcbN5BGrT
                behaviors:
                  - zn6CnBrBLc1BFh
                  - RgCwFJQzzJj2J5
                  - kJ4Gb1G34pgkt8
                  - 7tqF4N6kwND23N
                  - fGRmt3c7QthKzm
                  - NzG5gtKM76Ldg8
                  - ktbt9Rt25pGJQp
          - type: folder
            uid: 4RbGTWt65N5c6m
            colorClass: act
            icon: help-circle
            name: piecesWhite
            lastmod: 1713649225575
            entries:
              - type: template
                baseClass: AnimatedSprite
                name: whitepiecepawn1
                depth: 0
                texture: 5h2r6pwpc5FtcM
                playAnimationOnStart: false
                loopAnimation: true
                animationFPS: 30
                visible: true
                events:
                  - eventKey: OnPointerClick
                    code: |
                      if (localStorage.getItem('whichPlayerTurn') === '1') { 
                          localStorage.setItem('pieceID', 'wpp1')
                       
                          
                          for (let highlight of templates.list['tileHighlight']) {
                                  highlight.kill = true;
                          }

                          return;
                      }

                       else if (localStorage.getItem('whichPlayerTurn') === '2') {
                          console.log('it aint your turn fool')
                          return;
                      }
                    arguments: {}
                    lib: core
                  - eventKey: OnDraw
                    code: >-
                      if (localStorage.getItem('timeToMove') === '1' &&
                      localStorage.getItem('pieceID') === 'wpp1') {
                          let mvY = localStorage.getItem('moveToY')
                          let mvX = localStorage.getItem('moveToX')
                          this.y = Number(mvY)
                          this.x = Number(mvX)
                          
                          this.madeMove = true;
                          localStorage.setItem('timeToMove','0')
                      }
                    arguments: {}
                    lib: core
                  - eventKey: OnCreate
                    code: this.moveType = this.moveType ?? 0;
                    arguments: {}
                    lib: core
                extends:
                  cgroup: White
                lastmod: 1713922983669
                uid: L2HfLRgdwCq3h8
                behaviors:
                  - RhhdhCbR2dnB7M
                  - jrGK6Dqmjb8NPd
                  - gf9cpcJ4MJMdmQ
                  - JpzwtHfC8W7DLL
                  - dQ8HQ1DdftWz2W
                  - Md8CWCW3bH4TcW
                  - c4FmWf8Gt6C2wM
              - type: template
                baseClass: AnimatedSprite
                name: whitepieceknight1
                depth: 0
                texture: MPBDTRRG5T5RhB
                playAnimationOnStart: false
                loopAnimation: true
                animationFPS: 30
                visible: true
                events:
                  - eventKey: OnPointerClick
                    code: |
                      if (localStorage.getItem('whichPlayerTurn') === '1') { 
                          localStorage.setItem('pieceID', 'wpkn1')
                          
                          for (let highlight of templates.list['tileHighlight']) {
                                  highlight.kill = true;
                          }
                      }

                       else if (localStorage.getItem('whichPlayerTurn') === '2') {
                          console.log('it aint your turn fool')
                          return;
                      }
                    arguments: {}
                    lib: core
                  - eventKey: OnDraw
                    code: >-
                      if (localStorage.getItem('timeToMove') === '1' &&
                      localStorage.getItem('pieceID') === 'wpkn1') {
                          let mvY = localStorage.getItem('moveToY')
                          let mvX = localStorage.getItem('moveToX')
                          this.y = Number(mvY)
                          this.x = Number(mvX)
                          
                          this.madeMove = true;
                          localStorage.setItem('timeToMove','0')
                      }
                    arguments: {}
                    lib: core
                  - eventKey: OnCreate
                    code: this.moveType = this.moveType ?? 1;
                    arguments: {}
                    lib: core
                extends:
                  cgroup: White
                lastmod: 1713922973121
                uid: W5NGLtKdr8Tmkr
                behaviors:
                  - JpzwtHfC8W7DLL
                  - gf9cpcJ4MJMdmQ
                  - jrGK6Dqmjb8NPd
                  - Md8CWCW3bH4TcW
                  - RhhdhCbR2dnB7M
                  - dQ8HQ1DdftWz2W
                  - c4FmWf8Gt6C2wM
              - type: template
                baseClass: AnimatedSprite
                name: whitepiecerook1
                depth: 0
                texture: DH5B8Fwmg7c3Kk
                playAnimationOnStart: false
                loopAnimation: true
                animationFPS: 30
                visible: true
                events:
                  - eventKey: OnPointerClick
                    code: |
                      if (localStorage.getItem('whichPlayerTurn') === '1') { 
                          localStorage.setItem('pieceID', 'wpr1')
                          
                          for (let highlight of templates.list['tileHighlight']) {
                                  highlight.kill = true;
                          }
                      }

                       else if (localStorage.getItem('whichPlayerTurn') === '2') {
                          console.log('it aint your turn fool')
                          return;
                      }
                    arguments: {}
                    lib: core
                  - eventKey: OnDraw
                    code: >-
                      if (localStorage.getItem('timeToMove') === '1' &&
                      localStorage.getItem('pieceID') === 'wpr1') {
                          let mvY = localStorage.getItem('moveToY')
                          let mvX = localStorage.getItem('moveToX')
                          this.y = Number(mvY)
                          this.x = Number(mvX)
                          
                          this.madeMove = true;
                          localStorage.setItem('timeToMove','0')
                      }
                    arguments: {}
                    lib: core
                  - eventKey: OnCreate
                    code: this.moveType = this.moveType ?? 2;
                    arguments: {}
                    lib: core
                extends:
                  cgroup: White
                lastmod: 1713923681212
                uid: NfJqh1GcfLqdtB
                behaviors:
                  - JpzwtHfC8W7DLL
                  - gf9cpcJ4MJMdmQ
                  - jrGK6Dqmjb8NPd
                  - Md8CWCW3bH4TcW
                  - RhhdhCbR2dnB7M
                  - dQ8HQ1DdftWz2W
                  - c4FmWf8Gt6C2wM
              - type: template
                baseClass: AnimatedSprite
                name: whitepiecequeen
                depth: 0
                texture: Lpq9qncWgbPFqM
                playAnimationOnStart: false
                loopAnimation: true
                animationFPS: 30
                visible: true
                events:
                  - eventKey: OnPointerClick
                    code: |
                      if (localStorage.getItem('whichPlayerTurn') === '1') { 
                          localStorage.setItem('pieceID', 'wpq')
                           
                          for (let highlight of templates.list['tileHighlight']) {
                                  highlight.kill = true;
                          }
                      }

                       else if (localStorage.getItem('whichPlayerTurn') === '2') {
                          console.log('it aint your turn fool')
                          return;
                      }
                    arguments: {}
                    lib: core
                  - eventKey: OnDraw
                    code: >-
                      if (localStorage.getItem('timeToMove') === '1' &&
                      localStorage.getItem('pieceID') === 'wpq') {
                          let mvY = localStorage.getItem('moveToY')
                          let mvX = localStorage.getItem('moveToX')
                          this.y = Number(mvY)
                          this.x = Number(mvX)
                          
                          this.madeMove = true;
                          localStorage.setItem('timeToMove','0')
                      }
                    arguments: {}
                    lib: core
                  - eventKey: OnCreate
                    code: this.moveType = this.moveType ?? 4;
                    arguments: {}
                    lib: core
                extends:
                  cgroup: White
                lastmod: 1713923126570
                uid: Q1Rn3GzGNTK6Lf
                behaviors:
                  - JpzwtHfC8W7DLL
                  - gf9cpcJ4MJMdmQ
                  - jrGK6Dqmjb8NPd
                  - Md8CWCW3bH4TcW
                  - RhhdhCbR2dnB7M
                  - dQ8HQ1DdftWz2W
                  - c4FmWf8Gt6C2wM
              - type: template
                baseClass: AnimatedSprite
                name: whitepiecebishop1
                depth: 0
                texture: JdtDG47H399NNk
                playAnimationOnStart: false
                loopAnimation: true
                animationFPS: 30
                visible: true
                events:
                  - eventKey: OnPointerClick
                    code: |
                      if (localStorage.getItem('whichPlayerTurn') === '1') { 
                           localStorage.setItem('pieceID','wpb1')
                          for (let highlight of templates.list['tileHighlight']) {
                                  highlight.kill = true;
                          }
                      }

                       else if (localStorage.getItem('whichPlayerTurn') === '2') {
                          console.log('it aint your turn fool')
                          return;
                      }
                    arguments: {}
                    lib: core
                  - eventKey: OnDraw
                    code: >-
                      if (localStorage.getItem('timeToMove') === '1' &&
                      localStorage.getItem('pieceID') === 'wpb1') {
                          let mvY = localStorage.getItem('moveToY')
                          let mvX = localStorage.getItem('moveToX')
                          this.y = Number(mvY)
                          this.x = Number(mvX)
                          
                          this.madeMove = true;
                          localStorage.setItem('timeToMove','0')
                      }
                    arguments: {}
                    lib: core
                  - eventKey: OnCreate
                    code: this.moveType = this.moveType ?? 3;
                    arguments: {}
                    lib: core
                extends:
                  cgroup: White
                lastmod: 1713922961766
                uid: c191gHKgH6NQg8
                behaviors:
                  - JpzwtHfC8W7DLL
                  - jrGK6Dqmjb8NPd
                  - gf9cpcJ4MJMdmQ
                  - RhhdhCbR2dnB7M
                  - Md8CWCW3bH4TcW
                  - dQ8HQ1DdftWz2W
                  - c4FmWf8Gt6C2wM
              - type: template
                baseClass: AnimatedSprite
                name: whitepieceking
                depth: 0
                texture: j6h82JcCcWmMjb
                playAnimationOnStart: false
                loopAnimation: true
                animationFPS: 30
                visible: true
                events:
                  - eventKey: OnPointerClick
                    code: |
                      if (localStorage.getItem('whichPlayerTurn') === '1') { 
                          localStorage.setItem('pieceID', 'wpk')
                           
                          for (let highlight of templates.list['tileHighlight']) {
                                  highlight.kill = true;
                          }
                      }

                       else if (localStorage.getItem('whichPlayerTurn') === '2') {
                          console.log('it aint your turn fool')
                          return;
                      }
                    arguments: {}
                    lib: core
                  - eventKey: OnDraw
                    code: >-
                      if (localStorage.getItem('timeToMove') === '1' &&
                      localStorage.getItem('pieceID') === 'wpk') {
                          let mvY = localStorage.getItem('moveToY')
                          let mvX = localStorage.getItem('moveToX')
                          this.y = Number(mvY)
                          this.x = Number(mvX)
                          
                          this.madeMove = true;
                          localStorage.setItem('timeToMove','0')
                      }



                      // if (this.kill === true) {

                      //     console.log('I ded')

                      //    
                      localStorage.setItem('winnerWinnerChickenDinner','Black')

                      //     rooms.switch('winScreen');

                      // }
                    arguments: {}
                    lib: core
                  - eventKey: OnDestroy
                    code: |2-

                       localStorage.setItem('winnerWinnerChickenDinner','Black')
                        
                      let transitionOut = transition.slideOut(500,'left')

                      transitionOut.then(() => {
                          localStorage.setItem('transitioning', '1')
                          rooms.switch('winScreen')
                          localStorage.setItem('transitioning','0')
                      })
                    arguments: {}
                    lib: core
                  - eventKey: OnCreate
                    code: this.moveType = this.moveType ?? 5;
                    arguments: {}
                    lib: core
                extends:
                  cgroup: White
                lastmod: 1713922967833
                uid: Trp2t7jtmF7HW3
                behaviors:
                  - JpzwtHfC8W7DLL
                  - gf9cpcJ4MJMdmQ
                  - jrGK6Dqmjb8NPd
                  - Md8CWCW3bH4TcW
                  - RhhdhCbR2dnB7M
                  - dQ8HQ1DdftWz2W
                  - c4FmWf8Gt6C2wM
              - type: template
                baseClass: AnimatedSprite
                name: whitepiecepawn2
                depth: 0
                texture: 5h2r6pwpc5FtcM
                playAnimationOnStart: false
                loopAnimation: true
                animationFPS: 30
                visible: true
                events:
                  - eventKey: OnPointerClick
                    code: |
                      if (localStorage.getItem('whichPlayerTurn') === '1') { 
                           localStorage.setItem('pieceID','wpp2')
                          for (let highlight of templates.list['tileHighlight']) {
                                  highlight.kill = true;
                          }
                      }

                       else if (localStorage.getItem('whichPlayerTurn') === '2') {
                          console.log('it aint your turn fool')
                          return;
                      }
                    arguments: {}
                    lib: core
                  - eventKey: OnDraw
                    code: >-
                      if (localStorage.getItem('timeToMove') === '1' &&
                      localStorage.getItem('pieceID') === 'wpp2') {
                          let mvY = localStorage.getItem('moveToY')
                          let mvX = localStorage.getItem('moveToX')
                          this.y = Number(mvY)
                          this.x = Number(mvX)
                          
                          this.madeMove = true;
                          localStorage.setItem('timeToMove','0')
                      }
                    arguments: {}
                    lib: core
                  - eventKey: OnCreate
                    code: this.moveType = this.moveType ?? 0;
                    arguments: {}
                    lib: core
                extends:
                  cgroup: White
                lastmod: 1713922989703
                uid: WMMNFgBMhWMghz
                behaviors:
                  - JpzwtHfC8W7DLL
                  - gf9cpcJ4MJMdmQ
                  - jrGK6Dqmjb8NPd
                  - Md8CWCW3bH4TcW
                  - RhhdhCbR2dnB7M
                  - dQ8HQ1DdftWz2W
                  - c4FmWf8Gt6C2wM
              - type: template
                baseClass: AnimatedSprite
                name: whitepiecepawn3
                depth: 0
                texture: 5h2r6pwpc5FtcM
                playAnimationOnStart: false
                loopAnimation: true
                animationFPS: 30
                visible: true
                events:
                  - eventKey: OnPointerClick
                    code: |
                      if (localStorage.getItem('whichPlayerTurn') === '1') { 
                          localStorage.setItem('pieceID', 'wpp3')
                           
                          for (let highlight of templates.list['tileHighlight']) {
                                  highlight.kill = true;
                          }
                      }

                       else if (localStorage.getItem('whichPlayerTurn') === '2') {
                          console.log('it aint your turn fool')
                          return;
                      }
                    arguments: {}
                    lib: core
                  - eventKey: OnDraw
                    code: >-
                      if (localStorage.getItem('timeToMove') === '1' &&
                      localStorage.getItem('pieceID') === 'wpp3') {
                          let mvY = localStorage.getItem('moveToY')
                          let mvX = localStorage.getItem('moveToX')
                          this.y = Number(mvY)
                          this.x = Number(mvX)
                          
                          this.madeMove = true;
                          localStorage.setItem('timeToMove','0')
                      }
                    arguments: {}
                    lib: core
                  - eventKey: OnCreate
                    code: this.moveType = this.moveType ?? 0;
                    arguments: {}
                    lib: core
                extends:
                  cgroup: White
                lastmod: 1713922993950
                uid: KKRnqJHBd8zNK6
                behaviors:
                  - JpzwtHfC8W7DLL
                  - gf9cpcJ4MJMdmQ
                  - jrGK6Dqmjb8NPd
                  - Md8CWCW3bH4TcW
                  - RhhdhCbR2dnB7M
                  - dQ8HQ1DdftWz2W
                  - c4FmWf8Gt6C2wM
              - type: template
                baseClass: AnimatedSprite
                name: whitepiecepawn4
                depth: 0
                texture: 5h2r6pwpc5FtcM
                playAnimationOnStart: false
                loopAnimation: true
                animationFPS: 30
                visible: true
                events:
                  - eventKey: OnPointerClick
                    code: |
                      if (localStorage.getItem('whichPlayerTurn') === '1') { 
                          localStorage.setItem('pieceID', 'wpp4')
                           
                          for (let highlight of templates.list['tileHighlight']) {
                                  highlight.kill = true;
                          }
                      }

                       else if (localStorage.getItem('whichPlayerTurn') === '2') {
                          console.log('it aint your turn fool')
                          return;
                      }
                    arguments: {}
                    lib: core
                  - eventKey: OnDraw
                    code: >-
                      if (localStorage.getItem('timeToMove') === '1' &&
                      localStorage.getItem('pieceID') === 'wpp4') {
                          let mvY = localStorage.getItem('moveToY')
                          let mvX = localStorage.getItem('moveToX')
                          this.y = Number(mvY)
                          this.x = Number(mvX)
                          
                          this.madeMove = true;
                          localStorage.setItem('timeToMove','0')
                      }
                    arguments: {}
                    lib: core
                  - eventKey: OnCreate
                    code: this.moveType = this.moveType ?? 0;
                    arguments: {}
                    lib: core
                extends:
                  cgroup: White
                lastmod: 1713923028152
                uid: qDKbwHtRPPbrD2
                behaviors:
                  - JpzwtHfC8W7DLL
                  - gf9cpcJ4MJMdmQ
                  - jrGK6Dqmjb8NPd
                  - Md8CWCW3bH4TcW
                  - RhhdhCbR2dnB7M
                  - dQ8HQ1DdftWz2W
                  - c4FmWf8Gt6C2wM
              - type: template
                baseClass: AnimatedSprite
                name: whitepiecepawn5
                depth: 0
                texture: 5h2r6pwpc5FtcM
                playAnimationOnStart: false
                loopAnimation: true
                animationFPS: 30
                visible: true
                events:
                  - eventKey: OnPointerClick
                    code: |
                      if (localStorage.getItem('whichPlayerTurn') === '1') { 
                          localStorage.setItem('pieceID', 'wpp5')
                          
                          for (let highlight of templates.list['tileHighlight']) {
                                  highlight.kill = true;
                          }
                      }

                       else if (localStorage.getItem('whichPlayerTurn') === '2') {
                          console.log('it aint your turn fool')
                          return;
                      }
                    arguments: {}
                    lib: core
                  - eventKey: OnDraw
                    code: >-
                      if (localStorage.getItem('timeToMove') === '1' &&
                      localStorage.getItem('pieceID') === 'wpp5') {
                          let mvY = localStorage.getItem('moveToY')
                          let mvX = localStorage.getItem('moveToX')
                          this.y = Number(mvY)
                          this.x = Number(mvX)
                          
                          this.madeMove = true;
                          localStorage.setItem('timeToMove','0')
                      }
                    arguments: {}
                    lib: core
                  - eventKey: OnCreate
                    code: this.moveType = this.moveType ?? 0;
                    arguments: {}
                    lib: core
                extends:
                  cgroup: White
                lastmod: 1713923033117
                uid: P5R5qjCdnqn52N
                behaviors:
                  - JpzwtHfC8W7DLL
                  - gf9cpcJ4MJMdmQ
                  - jrGK6Dqmjb8NPd
                  - Md8CWCW3bH4TcW
                  - RhhdhCbR2dnB7M
                  - dQ8HQ1DdftWz2W
                  - c4FmWf8Gt6C2wM
              - type: template
                baseClass: AnimatedSprite
                name: whitepiecepawn6
                depth: 0
                texture: 5h2r6pwpc5FtcM
                playAnimationOnStart: false
                loopAnimation: true
                animationFPS: 30
                visible: true
                events:
                  - eventKey: OnPointerClick
                    code: |
                      if (localStorage.getItem('whichPlayerTurn') === '1') { 
                          localStorage.setItem('pieceID', 'wpp6')
                           
                          for (let highlight of templates.list['tileHighlight']) {
                                  highlight.kill = true;
                          }
                      }

                       else if (localStorage.getItem('whichPlayerTurn') === '2') {
                          console.log('it aint your turn fool')
                          return;
                      }
                    arguments: {}
                    lib: core
                  - eventKey: OnDraw
                    code: >-
                      if (localStorage.getItem('timeToMove') === '1' &&
                      localStorage.getItem('pieceID') === 'wpp6') {
                          let mvY = localStorage.getItem('moveToY')
                          let mvX = localStorage.getItem('moveToX')
                          this.y = Number(mvY)
                          this.x = Number(mvX)
                          
                          this.madeMove = true;
                          localStorage.setItem('timeToMove','0')
                      }
                    arguments: {}
                    lib: core
                  - eventKey: OnCreate
                    code: this.moveType = this.moveType ?? 0;
                    arguments: {}
                    lib: core
                extends:
                  cgroup: White
                lastmod: 1713923070455
                uid: nQwW5mF5TrPDJ9
                behaviors:
                  - JpzwtHfC8W7DLL
                  - gf9cpcJ4MJMdmQ
                  - jrGK6Dqmjb8NPd
                  - Md8CWCW3bH4TcW
                  - RhhdhCbR2dnB7M
                  - dQ8HQ1DdftWz2W
                  - c4FmWf8Gt6C2wM
              - type: template
                baseClass: AnimatedSprite
                name: whitepiecepawn7
                depth: 0
                texture: 5h2r6pwpc5FtcM
                playAnimationOnStart: false
                loopAnimation: true
                animationFPS: 30
                visible: true
                events:
                  - eventKey: OnPointerClick
                    code: |
                      if (localStorage.getItem('whichPlayerTurn') === '1') { 
                          localStorage.setItem('pieceID', 'wpp7')
                           
                          for (let highlight of templates.list['tileHighlight']) {
                                  highlight.kill = true;
                          }
                      }

                       else if (localStorage.getItem('whichPlayerTurn') === '2') {
                          console.log('it aint your turn fool')
                          return;
                      }
                    arguments: {}
                    lib: core
                  - eventKey: OnDraw
                    code: >-
                      if (localStorage.getItem('timeToMove') === '1' &&
                      localStorage.getItem('pieceID') === 'wpp7') {
                          let mvY = localStorage.getItem('moveToY')
                          let mvX = localStorage.getItem('moveToX')
                          this.y = Number(mvY)
                          this.x = Number(mvX)
                          
                          this.madeMove = true;
                          localStorage.setItem('timeToMove','0')
                      }
                    arguments: {}
                    lib: core
                  - eventKey: OnCreate
                    code: this.moveType = this.moveType ?? 0;
                    arguments: {}
                    lib: core
                extends:
                  cgroup: White
                lastmod: 1713923113201
                uid: HThbL6PrFPFm7J
                behaviors:
                  - JpzwtHfC8W7DLL
                  - gf9cpcJ4MJMdmQ
                  - jrGK6Dqmjb8NPd
                  - Md8CWCW3bH4TcW
                  - RhhdhCbR2dnB7M
                  - dQ8HQ1DdftWz2W
                  - c4FmWf8Gt6C2wM
              - type: template
                baseClass: AnimatedSprite
                name: whitepiecepawn8
                depth: 0
                texture: 5h2r6pwpc5FtcM
                playAnimationOnStart: false
                loopAnimation: true
                animationFPS: 30
                visible: true
                events:
                  - eventKey: OnPointerClick
                    code: |
                      if (localStorage.getItem('whichPlayerTurn') === '1') { 
                          localStorage.setItem('pieceID', 'wpp8')
                           
                          for (let highlight of templates.list['tileHighlight']) {
                                  highlight.kill = true;
                          }
                      }

                       else if (localStorage.getItem('whichPlayerTurn') === '2') {
                          console.log('it aint your turn fool')
                          return;
                      }
                    arguments: {}
                    lib: core
                  - eventKey: OnDraw
                    code: >-
                      if (localStorage.getItem('timeToMove') === '1' &&
                      localStorage.getItem('pieceID') === 'wpp8') {
                          let mvY = localStorage.getItem('moveToY')
                          let mvX = localStorage.getItem('moveToX')
                          this.y = Number(mvY)
                          this.x = Number(mvX)
                          
                          this.madeMove = true;
                          localStorage.setItem('timeToMove','0')
                      }
                    arguments: {}
                    lib: core
                  - eventKey: OnCreate
                    code: this.moveType = this.moveType ?? 0;
                    arguments: {}
                    lib: core
                extends:
                  cgroup: White
                lastmod: 1713923118165
                uid: p6QDLHpfhMfG5c
                behaviors:
                  - JpzwtHfC8W7DLL
                  - gf9cpcJ4MJMdmQ
                  - jrGK6Dqmjb8NPd
                  - Md8CWCW3bH4TcW
                  - RhhdhCbR2dnB7M
                  - dQ8HQ1DdftWz2W
                  - c4FmWf8Gt6C2wM
              - type: template
                baseClass: AnimatedSprite
                name: whitepiecebishop2
                depth: 0
                texture: JdtDG47H399NNk
                playAnimationOnStart: false
                loopAnimation: true
                animationFPS: 30
                visible: true
                events:
                  - eventKey: OnPointerClick
                    code: |
                      if (localStorage.getItem('whichPlayerTurn') === '1') { 
                          localStorage.setItem('pieceID', 'wpb2')
                          
                          for (let highlight of templates.list['tileHighlight']) {
                                  highlight.kill = true;
                          }
                      }

                       else if (localStorage.getItem('whichPlayerTurn') === '2') {
                          console.log('it aint your turn fool')
                          return;
                      }
                    arguments: {}
                    lib: core
                  - eventKey: OnDraw
                    code: >-
                      if (localStorage.getItem('timeToMove') === '1' &&
                      localStorage.getItem('pieceID') === 'wpb2') {
                          let mvY = localStorage.getItem('moveToY')
                          let mvX = localStorage.getItem('moveToX')
                          this.y = Number(mvY)
                          this.x = Number(mvX)
                          
                          this.madeMove = true;
                          localStorage.setItem('timeToMove','0')
                      }
                    arguments: {}
                    lib: core
                  - eventKey: OnCreate
                    code: this.moveType = this.moveType ?? 3;
                    arguments: {}
                    lib: core
                extends:
                  cgroup: White
                lastmod: 1713922961794
                uid: tfGwRLPjC5C9Kt
                behaviors:
                  - JpzwtHfC8W7DLL
                  - gf9cpcJ4MJMdmQ
                  - jrGK6Dqmjb8NPd
                  - Md8CWCW3bH4TcW
                  - RhhdhCbR2dnB7M
                  - dQ8HQ1DdftWz2W
                  - c4FmWf8Gt6C2wM
              - type: template
                baseClass: AnimatedSprite
                name: whitepieceknight2
                depth: 0
                texture: MPBDTRRG5T5RhB
                playAnimationOnStart: false
                loopAnimation: true
                animationFPS: 30
                visible: true
                events:
                  - eventKey: OnPointerClick
                    code: |
                      if (localStorage.getItem('whichPlayerTurn') === '1') { 
                           localStorage.setItem('pieceID','wpkn2')
                          for (let highlight of templates.list['tileHighlight']) {
                                  highlight.kill = true;
                          }
                      }

                       else if (localStorage.getItem('whichPlayerTurn') === '2') {
                          console.log('it aint your turn fool')
                          return;
                      }
                    arguments: {}
                    lib: core
                  - eventKey: OnDraw
                    code: >-
                      if (localStorage.getItem('timeToMove') === '1' &&
                      localStorage.getItem('pieceID') === 'wpkn2') {
                          let mvY = localStorage.getItem('moveToY')
                          let mvX = localStorage.getItem('moveToX')
                          this.y = Number(mvY)
                          this.x = Number(mvX)
                          
                          this.madeMove = true;
                          localStorage.setItem('timeToMove','0')
                      }
                    arguments: {}
                    lib: core
                  - eventKey: OnCreate
                    code: this.moveType = this.moveType ?? 1;
                    arguments: {}
                    lib: core
                extends:
                  cgroup: White
                lastmod: 1713922978051
                uid: cNmzDtw4T87KTR
                behaviors:
                  - JpzwtHfC8W7DLL
                  - gf9cpcJ4MJMdmQ
                  - jrGK6Dqmjb8NPd
                  - Md8CWCW3bH4TcW
                  - RhhdhCbR2dnB7M
                  - dQ8HQ1DdftWz2W
                  - c4FmWf8Gt6C2wM
              - type: template
                baseClass: AnimatedSprite
                name: whitepiecerook2
                depth: 0
                texture: DH5B8Fwmg7c3Kk
                playAnimationOnStart: false
                loopAnimation: true
                animationFPS: 30
                visible: true
                events:
                  - eventKey: OnPointerClick
                    code: |
                      if (localStorage.getItem('whichPlayerTurn') === '1') { 
                          localStorage.setItem('pieceID', 'wpr2')
                           for (let highlight of templates.list['tileHighlight']) {
                                  highlight.kill = true;
                          }
                      }

                       else if (localStorage.getItem('whichPlayerTurn') === '2') {
                          console.log('it aint your turn fool')
                          return;
                      }
                    arguments: {}
                    lib: core
                  - eventKey: OnDraw
                    code: >-
                      if (localStorage.getItem('timeToMove') === '1' &&
                      localStorage.getItem('pieceID') === 'wpr2') {
                          let mvY = localStorage.getItem('moveToY')
                          let mvX = localStorage.getItem('moveToX')
                          this.y = Number(mvY)
                          this.x = Number(mvX)
                          
                          this.madeMove = true;
                          localStorage.setItem('timeToMove','0')
                      }
                    arguments: {}
                    lib: core
                  - eventKey: OnCreate
                    code: this.moveType = this.moveType ?? 2;
                    arguments: {}
                    lib: core
                extends:
                  cgroup: White
                lastmod: 1713923699170
                uid: bbnKM9kqzTnQ1k
                behaviors:
                  - JpzwtHfC8W7DLL
                  - gf9cpcJ4MJMdmQ
                  - jrGK6Dqmjb8NPd
                  - Md8CWCW3bH4TcW
                  - RhhdhCbR2dnB7M
                  - dQ8HQ1DdftWz2W
                  - c4FmWf8Gt6C2wM
settings:
  authoring:
    author: Josh G & Skye Y
    site: ''
    title: Chessn't
    version:
      - 0
      - 1
      - 1
    versionPostfix: '0'
    appId: com.halfbakedsoftware.chessnt
  rendering:
    usePixiLegacy: true
    transparent: false
    maxFPS: 60
    pixelatedrender: true
    highDensity: true
    desktopMode: maximized
    hideCursor: false
    mobileScreenOrientation: unspecified
    viewMode: scaleFit
  export:
    autocloseDesktop: true
    windows: true
    linux: true
    mac: true
    functionWrap: false
    codeModifier: obfuscate
    bundleAssetTree: false
    bundleAssetTypes:
      texture: true
      template: true
      room: true
      behavior: false
      font: false
      sound: false
      style: false
      tandem: false
      script: false
  branding:
    accent: '#000000'
    invertPreloaderScheme: true
    icon: -1
    splashScreen: -1
    forceSmoothIcons: false
    forceSmoothSplashScreen: false
    hideLoadingLogo: true
    alternativeLogo: false
    customLoadingText: Loading Chaos....
  fps: 30
palette: []
